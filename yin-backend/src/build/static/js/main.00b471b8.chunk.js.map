{"version":3,"sources":["assets/images/Yin_Classroom_logo@4x.png","assets/images/Student@4x.png","assets/images/Teacher@4x.png","assets/images/1_graph.svg","assets/images/2_graph.svg","assets/images/3_graph.svg","assets/images/4_graph.svg","components/BaselineExplanation.js","components/Recorder.js","components/Baseline.js","components/Footer.js","components/Nav.js","components/Header.js","pages/Home.js","components/Login.js","components/LessonDirectoryCard.js","pages/LessonDirectory.js","components/Answer.js","components/FeedbackBox.js","helper/arrayHelpers.js","components/ChoiceQuiz.js","components/PitchChart.js","components/AudioPlayer.js","components/Mimicking.js","components/Production.js","components/Quiz.js","pages/Activity.js","components/AudioUpload.js","components/lessons/LessonForm.js","components/lessons/LessonEdit.js","components/lessons/LessonDelete.js","components/lessons/TeacherLessonDirectory.js","components/lessons/LessonShow.js","pages/TeacherInterface.js","pages/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BaselineExplanation","id","Component","Recorder","props","state","record","button_class","addRecordFunction","bind","componentDidMount","document","getElementById","classList","remove","this","then","blob","processAudio","csvDataLocation","a","async","start","search","end","url","substring","getDataSet","data","outputFunction","fetch","text","buttonId","Promise","resolve","audioBlob","navigator","mediaDevices","getUserMedia","audio","stream","mediaRecorder","MediaRecorder","setState","audioChunks","addEventListener","event","push","Blob","type","setTimeout","stop","formData","FormData","append","method","body","res","onClick","className","label","Baseline","setBaseline","dataset","baseline","extractAverage","d3","map","__data","Number","frequency","reduce","acc","number","length","href","Footer","Nav","to","isLoggedIn","username","Header","src","Logo","alt","is_teacher","Home","student","teacher","Login","fusername","fpassword","error","handleChange","handleForm","user","pass","value","target","password","preventDefault","submitForm","onSubmit","e","htmlFor","name","placeholder","onChange","LessonDirectoryCard","activityOpen","toggleActivityList","console","log","is_quiz","link","style","textDecoration","LessonName","LessonDesc","LessonDirectory","allLessons","response","json","result","lesson","description","key","_id","Answer","One","Two","Three","Four","querySelectorAll","forEach","div","stopPropagation","collectResponse","toneNumber","index","divKey","backgroundImage","chooseImage","role","aria-label","FeedbackBox","status","heading","content","arraysAreEqual","arr1","arr2","i","ChoiceQuiz","currentStimulus","options","active","submitted","answers","score","feedback_heading","feedback","handleClick","handleSubmit","nextQuestion","reset","chooseTones","randomize","displayAnswers","reportScore","selectRandomOption","getWrongOption","selectOptions","componentDidUpdate","stimuli","add","visibility","responses","getElementsByClassName","x","undefined","correctTone","questionLabel","split","item","j","Math","floor","random","inputArr","correctPos","option","shuffled","correctArr","allOptions","newOption","haystack","needle","checkForArrayInArrayOfArrays","incorrectCalls","choices","newArr","shuffledOptions","correct","optionArr","randomArr","splice","refs","pause","load","controls","ref","audioFile","opt","quiz","PitchChart","drawPitchChart","drawPitchCurve","divID","width","height","attr","y","standardDeviation","color","chartID","datarecord","parsedData","point","time","classed","curve","AudioPlayer","prevProps","Mimicking","userDataset","currentStimuli","allowAdvance","passDataToState","nextWord","headers","JSON","stringify","dir","recordingID","recording","updatedRecord","uploadRecording","recordingOutput","words","character","native_recording","String","advance","Production","Quiz","activity1","maxpoints","activity2","activity3","recordings","activity4","current","prev","sum_score","sum_total_score","captureScore","recordScore","initialize","addActivityRecording","prevState","snapshot","activities","activityNumber","includes","max_score","array1","allRecordings","concat","sendScore","num","next","activity","activitynum","num1","num2","toPercent","Activity","audioRes","audios","audioParse","userScores","match","params","sum_total","path","Boolean","quizSections","AudioUpload","word","alternateTones","lessonName","handleInputChange","createAlternateToneArray","checked","altTone1","altTone2","altTone3","files","for","LessonForm","wordKeys","quiz_sections","all_words","form_complete","handleCheckboxChange","fetchAllWords","handleSelectChange","matchWord","deleteLesson","is_checked","handleSectionChange","attribute","array","indexOf","selected","selected_keys","editing","newWords","multiple","size","LessonEdit","LessonDelete","deleted","delete","TeacherLessonDirectory","lessons","LessonShow","fetchLesson","TeacherInterface","component","SignUp","password2","preventSubmit","errorMessage","handlePasswordChange","message","App","toggleLessonActivity","checkLogin","lessonOpen","credentials","session","userdata","token","render","exact","React","window","location","hostname","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00b471b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Yin_Classroom_logo@4x.f472b60e.png\";","module.exports = __webpack_public_path__ + \"static/media/Student@4x.52823a73.png\";","module.exports = __webpack_public_path__ + \"static/media/Teacher@4x.d165e725.png\";","module.exports = __webpack_public_path__ + \"static/media/1_graph.4059374e.svg\";","module.exports = __webpack_public_path__ + \"static/media/2_graph.ec56be3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/3_graph.d05b49b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/4_graph.70af4f87.svg\";","import React, {Component} from 'react';\r\n\r\n\r\nclass BaselineExplanation extends Component{\r\n    render(){\r\n        return(\r\n            <div id =\"baseline-explanation\">\r\n                <p>Since pitch is relative to a speaker's voice, we need to know what your natural voice sounds like so that we can calibrate the curve accoridngly. </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BaselineExplanation;","import React, { Component } from 'react';\r\n\r\nclass Recorder extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            record: [],\r\n            button_class: ''\r\n        }\r\n        this.addRecordFunction = this.addRecordFunction.bind(this);\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        const recordButton = document.getElementById(\"__record_button\");\r\n        recordButton.classList.remove('green');\r\n    }\r\n\r\n    async addRecordFunction() {\r\n        // self.innerHTML = \"Recording\";\r\n        this.record(\"__record_button\")\r\n            .then( blob => {\r\n                // self.innerHTML = \"Done\"\r\n                this.processAudio(blob)\r\n                    .then( async (csvDataLocation) => {\r\n                        const start = csvDataLocation.search(/(\\*\\*\\*)/)+5\r\n                        const end = csvDataLocation.search('&&&')\r\n                        var url = csvDataLocation.substring(start,end)\r\n                        url = 'https://yin.rit.edu/' + url;\r\n                        const data = await this.getDataSet(url);\r\n                        this.props.outputFunction(data);\r\n                    })\t\r\n            })\r\n    }\r\n\r\n    async getDataSet(url){\r\n        const data = await (await fetch(`${url}`)).text();\r\n        return data;\r\n    }\r\n\r\n    record(buttonId) {\r\n        return new Promise(resolve => {\r\n            // var audio;\r\n            // var audioUrl;\r\n            var audioBlob;\r\n            // const recordButton = document.getElementById(buttonId);\r\n            navigator.mediaDevices.getUserMedia({\r\n                    audio: true\r\n                })\r\n                .then(stream => {\r\n                    const mediaRecorder = new MediaRecorder(stream);\r\n                    mediaRecorder.start();\r\n                    // recordButton.classList.remove(\"green\");\r\n                    // recordButton.classList.add(\"red\");\r\n                    this.setState({button_class:'red'});\r\n    \r\n                    const audioChunks = [];\r\n    \r\n                    mediaRecorder.addEventListener(\"dataavailable\", event => {\r\n                        audioChunks.push(event.data);\r\n                    });\r\n    \r\n                    mediaRecorder.addEventListener(\"stop\", () => {\r\n                        audioBlob = new Blob(audioChunks, {\r\n                            type: 'audio/wav; codecs=MS_PCM'\r\n                        });\r\n                        resolve(audioBlob);\r\n                    });\r\n    \r\n                    setTimeout(() => {\r\n                        mediaRecorder.stop();\r\n                        // recordButton.classList.remove(\"red\");\r\n                        // recordButton.classList.add(\"green\");\r\n                        this.setState({button_class:'green'});\r\n                    }, 2000);\r\n                });\r\n        })\r\n    };\r\n\r\n    async processAudio(audioBlob) {\r\n        return new Promise(resolve => {\r\n            // var rawResponse;\r\n            // var csvDataLocation;\r\n            var formData = new FormData();\r\n            formData.append(\"audioData\", audioBlob);\r\n            fetch('https://yin.rit.edu/pages/audioProcessing.php', {\r\n                method: 'POST', \r\n                body: formData,\r\n            }).then((res) => resolve(res.text()));\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <button onClick={this.addRecordFunction} className={this.state.button_class} id=\"__record_button\">{this.props.label}</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Recorder;","import React, {Component} from 'react';\r\nimport Recorder from './Recorder';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nclass Baseline extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.setBaseline = this.setBaseline.bind(this);\r\n    }\r\n\r\n    setBaseline(dataset){\r\n        const baseline = this.extractAverage(dataset);\r\n        this.props.outputFunction(baseline);\r\n    }\r\n\r\n    extractAverage(dataset){\r\n        const parsedData = d3.tsvParse(dataset);\r\n        const data = parsedData.map( (__data) => {\r\n            return Number(__data.frequency); \r\n        });\r\n\r\n        const baseline = data.reduce((acc, number) => acc + number, 0) / data.length;\r\n        return baseline;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id =\"activity-3-baseline\">\r\n                <h3>Record Baseline</h3>\r\n                <p>The following activity is designed to help you improve your ability to produce tone by mimicking a native speaker. You'll be given an audio recording of a native speaker saying a word, and asked to record yourself saying the word. You'll be shown the pitch curve of the native speaker, and after you finish your recording, your pitch curve will be placed along side it for your to compare.</p>\r\n                <p>To begin, please press the \"Record Baseline\" button and say aloud, \"This is my normal speaking voice.\"</p>\r\n                <Recorder id=\"baseline\" label=\"Baseline\" outputFunction={this.setBaseline} />\r\n                <p>\r\n                    <a href=\"/explanation\">Why are we asking you to do this?</a>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Baseline;","import React, {Component} from 'react';\r\n\r\nclass Footer extends Component{\r\n    render(){\r\n        return(\r\n            <footer>\r\n                <div className = \"footer\">\r\n                    <p>© Leo Holman and Christine McCullough</p>\r\n                    <p>Have any problems, comments, or suggestions? <br/>Contact us at: <a href=\"mailto:yinwebapp@gmail.com\">yinwebapp@gmail.com</a></p>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass Nav extends Component {\r\n    render(){\r\n        return(\r\n            <nav>\r\n                <ul>\r\n                    <li><a href=\"https://yin.rit.edu\">Return to Yin </a></li>\r\n                    <li><Link to=\"/lessons/\">Lessons & Quizzes &emsp;|</Link></li>\r\n                    <>\r\n                        {this.props.isLoggedIn ? \r\n                            <li><span>Logged in as: {this.props.username}&emsp;|</span></li>\r\n                        :\r\n                            <li><Link to=\"/login/\">Login &emsp;|</Link> </li>\r\n                        }\r\n                    {/* {this.props.is_teacher &&\r\n                        <li><Link to=\"/teacherInterface/\">Teachers &emsp;|</Link></li>} */}\r\n                    </>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Nav from './Nav.js';\r\nimport Logo from '../assets/images/Yin_Classroom_logo@4x.png';\r\n\r\nclass Header extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"header\">\r\n                <Link to=\"/\"><img src={Logo} id=\"logo\" alt=\"jojo the monkey walking by the yin logo\"/></Link>\r\n                <Nav is_teacher={this.props.is_teacher} isLoggedIn={this.props.isLoggedIn} username={this.props.username} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport '../css/Home.css'\r\n// import yin1 from '../assets/images/yin1.svg'\r\n// import yin2 from '../assets/images/yin2.svg'\r\n// import yin3 from '../assets/images/yin3.svg'\r\nimport student from '../assets/images/Student@4x.png';\r\nimport teacher from '../assets/images/Teacher@4x.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n    render(){\r\n        return (\r\n            <>\r\n                <div id = \"main\" className =\"classroom\">\r\n                   <h2>Welcome to Yin Classroom!</h2>\r\n                   <p id=\"summary\">Yin Classroom is a companion to Yin to facilitate using Yin's tools and activities in the classroom.\r\n                        Teachers can create lessons to correspond with classroom curriculum, upload audio for vocabulary lists, and add quizzes to test their students.\r\n                       Students can practice the words they'll actually need to know for class, and take quizzes at their convenience.\r\n                   </p>\r\n                   <section className=\"intro\">\r\n                        <img alt=\"student pointing at a laptop\" src={student}/>\r\n                        <img alt=\"Teacher teaching students at a whiteboard\" src={teacher}/>\r\n                        <div id=\"students\">\r\n                            <h3>STUDENTS</h3>\r\n                            <p>In Yin Classroom, you can test yourself with activities based on lessons you're learning in the classroom. \r\n                                Practice as much as you want in any of the lessons, and when you're ready, take any quizzes that your teacher\r\n                                has created for you. It's recommended you first explore <a href=\"www.yin.rit.edu\">Yin</a> to become familiar with\r\n                                how the activities work, and then come here to practice words your teacher has specifically added based on what you're \r\n                                learning in class. </p>\r\n                            <Link to=\"/login\"><button>Login</button></Link>\r\n                        </div>\r\n                        <div id=\"teachers\">\r\n                            <h3>TEACHERS</h3>\r\n                            <p>Want to use Yin in your classs? With Yin Classroom, you can create lessons based on word lists you're teaching, add your\r\n                                own audio recordings, and create quizzes to test your students' comprehension. Please <a href=\"mailto:yinwebapp@gmail.com\">email us </a>\r\n                                to sign up as a teacher or hear more about what Yin Classroom can offer your students!\r\n                            </p>\r\n                            <Link to=\"/login\"><button>Login</button></Link>\r\n                        </div>\r\n                   </section>\r\n                   <div id=\"background\">\r\n                    </div>     \r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../css/login.css';\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            fusername: '',\r\n            fpassword: '',\r\n            error:\"\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleForm = this.handleForm.bind(this);\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var user = document.getElementById(\"username\");\r\n        var pass = document.getElementById(\"password\");\r\n        if(user){\r\n            if (user.value !==\"\"){\r\n                this.setState({fusername:user.value});\r\n            } \r\n            if(pass.value !==\"\"){\r\n                this.setState({fpassword:pass.value});\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    handleChange(event, target) {\r\n        this.setState({[target]: event.target.value});\r\n    }\r\n\r\n    handleForm(event, username, password){\r\n        event.preventDefault();\r\n        if(username !== \"\" && password !==\"\"){\r\n            this.props.submitForm(event, username, password);\r\n            this.setState( {fusername: '', fpassword: ''});\r\n            this.setState({error:\"\"});\r\n        }else if (username===\"\" || password ===\"\"){\r\n            this.setState({'error':'Please fill out all fields.'});\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <form id=\"loginform\"  onSubmit={e => this.handleForm(e, this.state.fusername, this.state.fpassword )}>\r\n                    <h3>Login</h3>\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input id=\"username\" name=\"username\" placeholder=\"username\" type=\"text\" value ={this.state.fusername} onChange={e => this.handleChange(e,'fusername')} />\r\n                    <label htmlFor =\"password\">Password:</label>\r\n                    <input id=\"password\" name=\"password\" placeholder=\"password\" type=\"password\"  value={this.state.fpassword} onChange={e => this.handleChange(e,'fpassword')}/>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                    <p>{this.props.error} {this.state.error}</p>\r\n\r\n                </form>\r\n                {/* <Link to=\"/SignUp\">Don't have an account? Sign up.</Link> */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nclass LessonDirectoryCard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            activityOpen: false\r\n        }\r\n        this.toggleActivityList = this.toggleActivityList.bind(this);\r\n    }\r\n\r\n    toggleActivityList(){\r\n        this.setState({activityOpen: !this.state.activityOpen});\r\n        console.log(\"anything\")\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"lessonCard\">\r\n                {this.props.is_quiz ?\r\n                    <Link to={`${this.props.link}quiz`} style={{ textDecoration: 'none' }}>\r\n                        <div className=\"meta quiz\" onClick={this.toggleActivityList} >\r\n                            <h2><span id=\"no-underline\">Quiz: {this.props.LessonName}</span></h2>\r\n                            <p>{this.props.LessonDesc}</p>\r\n                        </div>\r\n                    </Link>\r\n                :\r\n                    <>\r\n                        <div className=\"meta\" onClick={this.toggleActivityList} >\r\n                            <h2>{this.props.is_quiz ? 'Quiz: ' : 'Lesson: '}{this.props.LessonName}</h2>\r\n                            <p>{this.props.LessonDesc}</p>\r\n                        </div>\r\n                        <div className = {`sub activityListContainer ${this.state.activityOpen ? '' : 'hide'} `}>\r\n                            <h2>Activities</h2>\r\n                            <ul className=\"activityList\">\r\n                                <li><Link to={`${this.props.link}1`}>1<br /></Link><span>Distinguishing</span></li>\r\n                                <li><Link to={`${this.props.link}2`}>2<br /></Link><span>Identifying</span></li>\r\n                                <li><Link to={`${this.props.link}3`}>3<br /></Link><span>Mimicking</span></li>\r\n                                <li><Link to={`${this.props.link}4`}>4<br /></Link><span>Producing</span></li>\r\n                            </ul>\r\n                        </div>\r\n                    </>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LessonDirectoryCard;","import React, { Component } from 'react';\r\nimport LessonDirectoryCard from '../components/LessonDirectoryCard';\r\n// import {\r\n//     BrowserRouter as Router,\r\n//     Switch,\r\n//     Route,\r\n//     Link\r\n//   } from \"react-router-dom\";\r\n// import Hexagon from '../components/Hexagon';\r\n\r\nclass LessonDirectory extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            allLessons: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        fetch('/api/lessons/all')\r\n            .then( (response) => response.json()\r\n                .then( (result) => {\r\n                    this.setState({allLessons: result});\r\n                }));\r\n        // console.log(`State: ${this.state.allLessons}`);\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ul>\r\n                    {this.state.allLessons.map( (lesson) => {\r\n                        return <LessonDirectoryCard LessonName={lesson.name} LessonDesc={lesson.description} is_quiz={lesson.is_quiz} link={`/lessons/${lesson.name}/`} key={`${lesson._id}`} />\r\n                    })}\r\n                </ul>\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LessonDirectory;","import React, {Component} from 'react';\r\nimport One from '../assets/images/1_graph.svg';\r\nimport Two from '../assets/images/2_graph.svg';\r\nimport Three from '../assets/images/3_graph.svg';\r\nimport Four from '../assets/images/4_graph.svg';\r\n\r\n\r\nclass Answer extends Component{\r\n\r\n    chooseImage(number){\r\n        switch(number){\r\n            case 1:\r\n                return One;\r\n            case 2:\r\n                return Two;\r\n            case 3:\r\n                return Three;\r\n            case 4:\r\n                return Four;\r\n            default:\r\n                return('Something went wrong');\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        var responseDivs = document.querySelectorAll(\"div.response\");\r\n        responseDivs.forEach( (div) => {\r\n            div.addEventListener('click', (event) => {\r\n                event.stopPropagation();\r\n                this.props.collectResponse(div);\r\n            })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            {this.props.number && \r\n                <div className={`response options${this.props.number.length}`} id={this.props.number}  key={this.props.number}>\r\n                    {this.props.number.map( (toneNumber, index) => {\r\n                        const divKey = `div_${this.props.number}_tone_${toneNumber}_index_${index}`;\r\n                        return <div id={divKey} key={divKey} className=\"inner-response\" style={{backgroundImage: `url(${this.chooseImage(toneNumber)})`}}>\r\n                            <span className =\"background-image\" role=\"img\" aria-label={toneNumber}></span>\r\n                        </div>\r\n\r\n                    })}\r\n                </div>\r\n                // :\r\n                // <p>Something went wrong</p>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Answer;","import React, { Component } from 'react';\r\n\r\n\r\nclass FeedbackBox extends Component{\r\nrender(){\r\n    return(\r\n        <div id =\"feedback-box\" className={`feedbackBox ${this.props.status}`}>\r\n            <> \r\n                <h3>{this.props.heading}</h3>\r\n                <p>{this.props.content}</p>\r\n            </>\r\n                \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default FeedbackBox;","export function arraysAreEqual(arr1,arr2){\r\n    for(let i = 0; i < arr1.length; i++){\r\n        if(arr1[i] !== arr2[i]){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function checkForArrayInArrayOfArrays(haystack, needle){\r\n    for(let i = 0; i < haystack.length; i++){\r\n        if(arraysAreEqual(haystack[i], needle)){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}","import React, {Component} from 'react';\r\nimport Answer from './Answer';\r\nimport FeedbackBox from './FeedbackBox';\r\nimport {Link} from 'react-router-dom';\r\nimport {arraysAreEqual, checkForArrayInArrayOfArrays} from '../helper/arrayHelpers';\r\n\r\nclass ChoiceQuiz extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentStimulus: 0,\r\n            options:[], \r\n            active:[],\r\n            submitted: false,\r\n            answers:[],\r\n            score:0,\r\n            status:\"\",\r\n            error:\"\",\r\n            feedback_heading:\"\",\r\n            feedback:\"\"\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.collectResponse = this.collectResponse.bind(this);\r\n        this.nextQuestion = this.nextQuestion.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n        this.chooseTones  = this.chooseTones.bind(this);\r\n        this.randomize = this.randomize.bind(this);\r\n        this.displayAnswers = this.displayAnswers.bind(this);\r\n        this.reportScore = this.reportScore.bind(this);\r\n        this.selectRandomOption = this.selectRandomOption.bind(this);\r\n        this.getWrongOption = this.getWrongOption.bind(this);\r\n        this.selectOptions = this.selectOptions.bind(this);\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.stimuli.length > this.state.currentStimulus ){\r\n            this.displayAnswers();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.stimuli.length > this.state.currentStimulus ){\r\n            this.displayAnswers();\r\n        }\r\n    }\r\n\r\n    reset(){\r\n        document.getElementById(\"nextQuestion\").classList.add(\"hide\");\r\n        document.getElementById(\"submitAnswer\").classList.remove(\"hide\");\r\n        document.getElementById(\"feedback-box\").style.visibility=\"hidden\";\r\n\r\n        var responses = document.getElementsByClassName(\"response\");\r\n        for (var x=0; x<responses.length; x++){\r\n            responses[x].classList.remove(\"active\");\r\n            responses[x].classList.remove(\"postive\");\r\n            responses[x].classList.remove(\"negative\");\r\n        }\r\n        this.setState({'submitted':false});\r\n        this.setState({'options':[]});\r\n        this.setState({'active':\"\"});\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState({'currentStimulus': this.state.currentStimulus + 1});\r\n        this.reset();\r\n    }\r\n\r\n    handleSubmit(event){\r\n        // if(!Array.isArray(this.state.active) || !this.state.active.length){\r\n        if(this.state.active !== undefined && this.state.active.length !==0){\r\n            this.setState({'submitted':true});\r\n            var responses = document.getElementsByClassName(\"response\");\r\n            for (var x=0; x<responses.length; x++){\r\n                responses[x].classList.remove(\"active\");\r\n            }\r\n    \r\n            if(arraysAreEqual(this.state.active,this.props.stimuli[this.state.currentStimulus].correctTone)){\r\n                document.getElementById(this.state.active).classList.add('positive');\r\n                this.setState({'score':this.state.score+1});\r\n                this.setState({'status':\"positive\"});\r\n                this.setState({feedback_heading: 'Correct!'});\r\n                this.setState({'feedback':`You selected tone ${this.state.active}, which is the correct answer.`});\r\n            } else{\r\n                document.getElementById(this.state.active).classList.add('negative');\r\n                this.setState({'status':\"negative\"});\r\n                this.setState({feedback_heading: 'Incorrect.'});\r\n                this.setState({'feedback':`You selected tone ${this.state.active}, when it should've been tone ${this.props.stimuli[this.state.currentStimulus].correctTone}.`});\r\n\r\n            }\r\n    \r\n            document.getElementById(\"nextQuestion\").classList.remove(\"hide\");\r\n            document.getElementById(\"submitAnswer\").classList.add(\"hide\");\r\n            document.getElementById(\"feedback-box\").style.visibility=\"visible\";\r\n            this.setState({'error':\"\"});\r\n        }else{\r\n            this.setState({'error':\"Please select an option.\"});\r\n        }\r\n        \r\n    }\r\n\r\n    collectResponse(div){\r\n        if(this.state.submitted===false){\r\n            const questionLabel = `question${this.state.currentStimulus}`;\r\n            this.setState({'answers':[questionLabel, div.id ]});\r\n            this.setState({'active': div.id.split(',').map((item) => Number(item))});\r\n            var responses = document.getElementsByClassName(\"response\");\r\n            for (var x=0; x<responses.length; x++){\r\n                responses[x].classList.remove(\"active\");\r\n            }\r\n            div.classList.add(\"active\");\r\n        }\r\n    }\r\n\r\n    randomize(a){\r\n        var j, x, i;\r\n        for (i = a.length - 1; i > 0; i--) {\r\n            j = Math.floor(Math.random() * (i + 1));\r\n            x = a[i];\r\n            a[i] = a[j];\r\n            a[j] = x;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    selectRandomOption(inputArr, correctPos){\r\n        let option = [];\r\n        const allPossible = [1,2,3,4]\r\n        let shuffled = this.randomize(allPossible);\r\n\r\n        if(inputArr.length === 1){\r\n            if(shuffled[0] === inputArr[0]){\r\n                option.push(shuffled[1])\r\n            } else {\r\n                option.push(shuffled[0]);\r\n            }\r\n        } else {\r\n            for(let i = 0; i < inputArr.length; i++){\r\n                if(i === correctPos){\r\n                    option.push(inputArr[i]);\r\n                } else {\r\n                    if(shuffled[i] === inputArr[i]){\r\n                        if(i === inputArr.length - 1){\r\n                            option.push(shuffled[0])\r\n                        } else {\r\n                            option.push(shuffled[i + 1])\r\n                        }\r\n                    } else {\r\n                        option.push(shuffled[i])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    }\r\n\r\n    getWrongOption(correctArr, correctPos, allOptions){\r\n            let newOption = this.selectRandomOption(correctArr, correctPos);\r\n            if(checkForArrayInArrayOfArrays(allOptions,newOption)){\r\n                return this.getWrongOption(correctArr, correctPos, allOptions);\r\n            } else {\r\n                return newOption;\r\n            }\r\n    }\r\n\r\n    selectOptions(){\r\n        const correctArr = this.props.stimuli[this.state.currentStimulus].correctTone;\r\n        let allOptions = [];\r\n        allOptions.push(correctArr);\r\n        let incorrectCalls = this.props.choices - 1;\r\n        let correctPos = 0;\r\n        for(let i = 0; i < incorrectCalls; i++){\r\n            let newArr = this.getWrongOption(correctArr, correctPos, allOptions);\r\n            allOptions.push(newArr);\r\n            correctPos++;\r\n            if(correctPos === correctArr.length){\r\n                correctPos = 0;\r\n            }\r\n        }\r\n        if(this.state.options === undefined || this.state.options.length<1){\r\n            var shuffledOptions = this.randomize(allOptions)\r\n            this.setState({options: shuffledOptions});\r\n        }\r\n    }\r\n\r\n    chooseTones(correct){\r\n\r\n        var optionArr =[];\r\n        var randomArr = [1,2,3,4];\r\n        \r\n        //Two choice quiz needs randomized \r\n        if(this.props.choices==='2'){\r\n            //randomize the alternate tones \r\n            randomArr = this.randomize(randomArr);\r\n        \r\n            for (var i=0; i<randomArr.length; i++){\r\n                if (randomArr[i] === correct){\r\n                    optionArr.push(randomArr[i]);\r\n                    randomArr.splice(i, 1); \r\n                }\r\n            }\r\n            optionArr.push(randomArr[0]);\r\n        } else {\r\n            optionArr = randomArr;\r\n        }\r\n        \r\n        if(this.state.options === undefined || this.state.options.length<1){\r\n            this.setState({'options': optionArr});\r\n        }\r\n    }\r\n\r\n    displayAnswers(){\r\n        if(this.state.options === undefined || this.state.options.length<1){\r\n            this.selectOptions();\r\n        } \r\n    }\r\n\r\n    reportScore(){\r\n        this.props.reportScore(this.state.score, this.props.stimuli.length, this.props.choices);\r\n    }\r\n\r\n    nextQuestion(){\r\n        this.refs.audio.pause();\r\n        this.refs.audio.load();\r\n        this.handleClick();\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {this.props.stimuli && \r\n                    <>\r\n                    { this.props.stimuli.length > this.state.currentStimulus ? \r\n                    <>\r\n                    <div className=\"activity-wrap two-choice\">\r\n                        <div className=\"stimuli\">\r\n                            <audio controls id = \"audio-clip\" ref=\"audio\" >\r\n                                <source id=\"audioSource\" src={`/${this.props.stimuli[this.state.currentStimulus].audioFile}`} type=\"audio/mpeg\" />\r\n                                Audio not working!\r\n                            </audio>\r\n                            {/* <p>word:  {this.props.stimuli[this.state.currentStimulus].character}</p> */}\r\n                        \r\n                        </div>\r\n                        <div className = \"answers\">\r\n                            {this.state.options.map( (opt) => {\r\n                                return <Answer number = {opt} key ={opt} collectResponse={this.collectResponse} />\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"feedbackContainer\">\r\n                        <button onClick={this.handleSubmit} id=\"submitAnswer\">Submit</button>\r\n                        <button onClick={this.nextQuestion} className=\"hide\" id=\"nextQuestion\">Next</button>\r\n                        <FeedbackBox status = {this.state.status} heading={this.state.feedback_heading} content={this.state.feedback}/>\r\n                        <p id=\"error\">{this.state.error}</p>\r\n                    </div>\r\n                    </>\r\n                    \r\n                    :\r\n                        <>\r\n                        {this.props.quiz===\"true\" ?\r\n                            <>\r\n                            <p>You've completed this section of the quiz.</p>\r\n                            <button onClick={this.reportScore}>Continue</button>\r\n                            </>\r\n                        :\r\n                        <div id=\"score\">\r\n                            <h2>Activity complete!</h2>\r\n                            <p>Your score is: {this.state.score} out of {this.props.stimuli.length}</p>\r\n                            <Link to=\"../\">Return to Lessons & Quizzes</Link>\r\n                            {this.props.choices==='2' ? <Link to=\"./2\"><button>Next activity</button></Link>\r\n                            :\r\n                            <Link to=\"./3\"><button>Next activity</button></Link>\r\n                            }\r\n                        </div>\r\n                        }\r\n                        </>\r\n                    }\r\n                </>\r\n            }\r\n        </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ChoiceQuiz;","import React, { Component } from 'react';\r\nimport * as d3 from 'd3'\r\n\r\nclass PitchChart extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.drawPitchChart = this.drawPitchChart.bind(this);\r\n        this.drawPitchCurve = this.drawPitchCurve.bind(this);\r\n    }\r\n    \r\n    drawPitchChart(divID, width, height) {\r\n        d3.select(`#${divID}`)\r\n            .append('svg')\r\n            .attr('width', width)\r\n            .attr('height', height)\r\n            .style('background', '#eeeeee')\r\n            .style('border','3px solid #9A2D04');\r\n        var y = 2;\r\n        var i;\r\n        for (i = 0; i < 5; i++) {\r\n            d3.select(`#${divID} svg`)\r\n                .append('line')\r\n                .attr('x1', 0)\r\n                .attr('y1', y)\r\n                .attr('x2', width)\r\n                .attr('y2', y)\r\n                .style('stroke', '#babbbc')\r\n                .style('stroke-width', '3px');\r\n            if (i === 3) {\r\n                y -= 4;\r\n            }\r\n            y += (height / 4);\r\n        }\r\n    }\r\n    \r\n    drawPitchCurve(dataset, width, height, {baseline=(height/2), standardDeviation=0, color=\"red\", chartID=\"__visualization\"} = {}) {\r\n        let datarecord = [];\r\n        const parsedData = d3.tsvParse(dataset);\r\n        parsedData.map((__data) => {\r\n            // let zScore = stats.calcZScore(baseline,data.frequency,standardDeviation);    \r\n            // if(isNaN(zScore)){\r\n            // \tzScore = 0;\r\n            // }\r\n            let point = {time: __data.time, frequency: __data.frequency};\r\n            datarecord.push(point);\r\n            // var zScore = 0;\r\n            var x = __data.time * (width / 2);\r\n            var y = height - ((height/2) + ((__data.frequency - (height/2))));\r\n            return d3.select(`#${chartID} svg`)\r\n                .append(\"circle\")\r\n                .attr(\"cx\", x)\r\n                .attr(\"cy\", y) \r\n                .attr(\"r\", 5)\r\n                .classed(\"userPitch\",true)\r\n                .style(\"fill\",color);\r\n            }\r\n        );\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.drawPitchChart('__visualization', 1100, 500);\r\n        this.props.dataset.map( (curve) => {\r\n            return this.drawPitchCurve(curve[0], 1100, 500, {color:curve[1]});\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log('PitchChartUpdate');\r\n        d3.selectAll(\"svg\").remove();\r\n        this.drawPitchChart('__visualization', 1100, 500);\r\n        this.props.dataset.map( (curve) => {\r\n            return this.drawPitchCurve(curve[0], 1100, 500, {color:curve[1]});\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <div id=\"__visualization\"> \r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PitchChart;","import React, { Component } from 'react';\r\n\r\nclass AudioPlayer extends Component {\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.audioFile !== this.props.audioFile){\r\n            document.getElementById('audioPlayer').load();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <audio className=\"stimuliAudio\" id=\"audioPlayer\" controls > \r\n                <source src={this.props.audioFile} />\r\n                The audio cannot play.\r\n            </audio>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AudioPlayer;","import React, { Component } from 'react'\r\nimport Recorder from './Recorder';\r\nimport PitchChart from './PitchChart';\r\nimport AudioPlayer from './AudioPlayer';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass Mimicking extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            record: [],\r\n            userDataset: '',\r\n            currentStimuli: 0,\r\n            allowAdvance: false\r\n        }\r\n        this.passDataToState = this.passDataToState.bind(this);\r\n        this.nextWord = this.nextWord.bind(this);\r\n    }\r\n\r\n    async uploadRecording(dataset, username){\r\n        const response = await(await fetch('/api/recordings/add/', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({dataset: dataset})\r\n        })).json();\r\n        console.dir(response);\r\n        const recordingID = response.recording;\r\n        const updatedRecord = [\r\n            ...this.state.record,\r\n            recordingID\r\n        ];\r\n        this.setState({record: updatedRecord});\r\n    }\r\n\r\n    passDataToState(dataset){\r\n        this.setState({\r\n            userDataset: dataset,\r\n            allowAdvance: true\r\n        });\r\n    }\r\n\r\n    nextWord(){\r\n        if(this.state.allowAdvance){\r\n            this.setState({\r\n                currentStimuli: this.state.currentStimuli + 1,\r\n                userDataset: '',\r\n                allowAdvance: false\r\n            });\r\n            if(this.props.lesson.is_quiz){\r\n                this.uploadRecording(this.state.userDataset);\r\n                this.props.recordingOutput('activity3', this.state.record);\r\n            }\r\n        } else {\r\n            console.log('Please complete the recording first!');\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {this.props.lesson && this.props.lesson.words && this.props.lesson.words[this.state.currentStimuli] ?\r\n                    <>\r\n                        <p className=\"stimuliCharacter\">{this.props.lesson.words[this.state.currentStimuli].character}</p>\r\n\r\n                        <AudioPlayer audioFile={`/${this.props.lesson.words[this.state.currentStimuli].audioFile}`} />\r\n                        {this.props.lesson.words[this.state.currentStimuli].native_recording && \r\n                            <PitchChart dataset={[[String(this.props.lesson.words[this.state.currentStimuli].native_recording.data), 'blue'],[String(this.state.userDataset), 'red']]} />\r\n                        }\r\n                        <Recorder label=\"Record\" outputFunction={this.passDataToState} key={Math.random()} />\r\n                        <button onClick={this.nextWord}>Next {this.props.lesson.words.length - 1 === this.state.currentStimuli ?\r\n                            \"Section\"\r\n                            :\r\n                            \"Word\"\r\n                        }</button>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    {this.props.quiz===\"true\" ?\r\n                            <>\r\n                                <p>You've completed this section of the quiz.</p>\r\n                                <button onClick={this.props.advance(3)}>Continue</button>\r\n                            </>\r\n                        :\r\n                            <div id=\"score\">\r\n                                <h2>Activity complete!</h2>\r\n                                <Link to=\"../\">Return to Lessons & Quizzes</Link>\r\n                                <Link to=\"./4\"><button>Next activity</button></Link>\r\n                            </div>\r\n                    }\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Mimicking;","import React, { Component } from 'react'\r\nimport Recorder from './Recorder';\r\nimport PitchChart from './PitchChart';\r\nimport AudioPlayer from './AudioPlayer';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass Production extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            record: [],\r\n            userDataset: '',\r\n            currentStimuli: 0,\r\n            allowAdvance: false\r\n        }\r\n        this.passDataToState = this.passDataToState.bind(this);\r\n        this.nextWord = this.nextWord.bind(this);\r\n    }\r\n\r\n    async uploadRecording(dataset, username){\r\n        const response = await(await fetch('/api/recordings/add/', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({dataset: dataset})\r\n        })).json();\r\n        console.dir(response);\r\n        const recordingID = response.recording;\r\n        const updatedRecord = [\r\n            ...this.state.record,\r\n            recordingID\r\n        ];\r\n        this.setState({record: updatedRecord});\r\n    }\r\n\r\n    passDataToState(dataset){\r\n        this.setState({\r\n            userDataset: dataset,\r\n            allowAdvance: true\r\n        });\r\n        if(this.props.lesson.is_quiz){\r\n            this.uploadRecording(dataset, this.props.username);\r\n        }\r\n    }\r\n\r\n    nextWord(){\r\n        if(this.state.allowAdvance){\r\n            this.setState({\r\n                currentStimuli: this.state.currentStimuli + 1,\r\n                userDataset: '',\r\n                allowAdvance: false\r\n            });\r\n            if(this.props.lesson.is_quiz){\r\n                this.uploadRecording(this.state.userDataset);\r\n                this.props.recordingOutput('activity4', this.state.record);\r\n            }\r\n        } else {\r\n            console.log('Please complete the recording first!');\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {this.props.lesson && this.props.lesson.words[this.state.currentStimuli]  ?\r\n                    <>\r\n                        { this.props.lesson.words[this.state.currentStimuli] && <p className=\"stimuliCharacter\">{this.props.lesson.words[this.state.currentStimuli].character}</p>}\r\n\r\n                        {this.state.allowAdvance ?\r\n                            <AudioPlayer audioFile={`/${this.props.lesson.words[this.state.currentStimuli].audioFile}`} />\r\n                        :\r\n                            <></>\r\n                        }\r\n                        <PitchChart \r\n                            dataset={this.state.allowAdvance ? [\r\n                                [String(this.props.lesson.words[this.state.currentStimuli].native_recording.data), 'blue'],\r\n                                [String(this.state.userDataset), 'red']\r\n                            ]\r\n                            :\r\n                            [\r\n                                [String(this.state.userDataset), 'red']\r\n                            ]\r\n                        }\r\n                        />\r\n                        <Recorder label=\"Record\" outputFunction={this.passDataToState} />\r\n                        <button onClick={this.nextWord}>Next {this.props.lesson.words.length - 1 === this.state.currentStimuli ?\r\n                            \"Section\"\r\n                            :\r\n                            \"Word\"\r\n                        }</button>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    {this.props.quiz===\"true\" ?\r\n                            <>\r\n                                <p>You've completed this section of the quiz.</p>\r\n                                <button onClick={this.props.advance(4)}>Continue</button>\r\n                            </>\r\n                        :\r\n                            <div id=\"score\">\r\n                                <h2>Activity complete!</h2>\r\n                                <Link to=\"../\">Return to Lessons & Quizzes</Link>\r\n                            </div>\r\n                    }\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Production;","import React, {Component} from 'react';\r\nimport ChoiceQuiz from './ChoiceQuiz';\r\nimport Mimicking from './Mimicking';\r\nimport Production from './Production';\r\n\r\nclass Quiz extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        console.log(props);\r\n        this.state = {\r\n            activity1:{\r\n                score: null,\r\n                maxpoints: 0\r\n            },\r\n            activity2:{\r\n                score: null,\r\n                maxpoints: 0\r\n            },\r\n            activity3:{\r\n                recordings:[]\r\n            },\r\n            activity4:{\r\n                recordings:[]\r\n            },\r\n            current: null,\r\n            // current:0,\r\n            prev: false,\r\n            sum_score: 0,\r\n            sum_total_score: 0\r\n        }\r\n        this.captureScore = this.captureScore.bind(this);\r\n        this.advance = this.advance.bind(this);\r\n        this.recordScore = this.recordScore.bind(this);\r\n        this.initialize= this.initialize.bind(this);\r\n        this.addActivityRecording = this.addActivityRecording.bind(this);\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n    }\r\n\r\n    async componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(this.props.activities){\r\n            if(this.state.current===null){\r\n                this.setState({current:this.props.activities[0]});\r\n            }\r\n        }\r\n        if(prevState.prev === false){\r\n            console.log('prev state is false')\r\n            const response = await fetch(`/api/quizScores/me/${this.props.lesson.name}`);\r\n            const result = await response.json();\r\n            if(result.length >0){\r\n                this.setState({prev: true});\r\n                console.log('state set');\r\n            }\r\n            console.log('Intialization completed');\r\n            return <></>;\r\n        }\r\n    }\r\n\r\n    async initialize(){\r\n        if(this.props.activities){\r\n            if(this.state.current===null){\r\n                this.setState({current:this.props.activities[0]});\r\n            }\r\n        }\r\n        const response = await fetch(`/api/quizScores/me/${this.props.lesson}`);\r\n        const result = await response.json();\r\n        if(result.length >0){\r\n            this.setState({prev: true});\r\n            console.log('state set');\r\n        }\r\n        console.log('Intialization completed');\r\n        return <></>;\r\n    }\r\n\r\n    addActivityRecording(activityNumber, recordings){\r\n        this.setState({[activityNumber]: {\r\n            recordings: recordings\r\n        }});\r\n    }\r\n\r\n    async recordScore(){\r\n        var sum_score = null;\r\n        var sum_total_score = null;\r\n        if(this.includes(1) && this.includes(2)){\r\n            sum_score = this.state.activity1.score + this.state.activity2.score;\r\n            sum_total_score = this.state.activity1.max_score + this.state.activity2.max_score;\r\n        } else if(this.includes(1)){\r\n            sum_score = this.state.activity1.score;\r\n            sum_total_score = this.state.activity1.max_score;\r\n        } else if (this.includes(2)){\r\n            sum_score = this.state.activity2.score;\r\n            sum_total_score = this.state.activity2.max_score;\r\n        }\r\n        this.setState({sum_score:sum_score});\r\n        this.setState({sum_total_score:sum_total_score});\r\n        var array1 = this.state.activity3.recordings;\r\n        var allRecordings = array1.concat(this.state.activity4.recordings);\r\n        this.props.sendScore(sum_score, sum_total_score, allRecordings);        \r\n    }\r\n\r\n    advance(num){\r\n        for (var i=num; i<5; i++){\r\n            var next=i+1;\r\n            if (this.includes(next)){\r\n                this.setState({\"current\":next});\r\n                break;\r\n            }else if (next===5){\r\n                this.setState({\"current\":5});\r\n                this.recordScore();\r\n            }\r\n        }\r\n    }\r\n\r\n    captureScore(score, max_score, choices){\r\n        const activity = choices===\"2\" ? \"activity1\" : \"activity2\";\r\n        const activitynum = choices===\"2\" ? 1 : 2;\r\n        this.setState({[activity]:{\r\n            \"score\": score, \r\n            \"max_score\": max_score\r\n        }}, () => {\r\n            this.advance(activitynum);\r\n        });\r\n    }\r\n\r\n    includes(num){\r\n        for(var i=0; i<this.props.activities.length; i++){\r\n            if(this.props.activities[i]===num){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    toPercent(num1,num2){\r\n        var percent= num1/num2 *100;\r\n        return percent;\r\n    }\r\n    //to-do\r\n    //need to lift state up from quizzes to here; when a quiz is finished, score needs to come up, and current needs to be updated to the next activity in this.props.activities (might not be the next sequentially)\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {/* {this.props.fullLesson && } */}\r\n                {this.state.prev===true && this.state.current !== 5? \r\n                    <>\r\n                        <h3>You've already taken this quiz.</h3>\r\n                        <p>You cannot take a quiz you've already taken. For more practice, explore the lessons. For re-takes, please speak with your teacher.</p>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    {this.props.activities && this.includes(1) && this.state.current===1 ?\r\n                        <ChoiceQuiz stimuli={this.props.stimuli} choices=\"2\" reportScore={this.captureScore} quiz=\"true\"/>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                    {this.props.activities && this.includes(2)  && this.state.current===2 ?\r\n                        <ChoiceQuiz stimuli={this.props.stimuli} choices=\"4\" reportScore={this.captureScore} quiz=\"true\"/>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                    {this.props.activities && this.includes(3)  && this.state.current===3 ?\r\n                        <Mimicking lesson={this.props.lesson} username={this.props.username} recordingOutput={this.addActivityRecording} advance = {this.advance} quiz=\"true\"/>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                    {this.props.activities && this.includes(4)  && this.state.current===4 ?\r\n                        <Production lesson={this.props.lesson} username={this.props.username} recordingOutput={this.addActivityRecording} advance = {this.advance} quiz=\"true\"/>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                    {this.props.activities  && this.state.current===5 ?\r\n                        <div id=\"score\">\r\n                        <h3>You've completed this quiz!</h3>\r\n                        <p>Your combined score on the multiple choice sections is <br/>{this.state.sum_score} out of {this.state.sum_total_score} ({this.toPercent(this.state.sum_score, this.state.sum_total_score)}%). <br />Your teacher will grade your recordings.</p>\r\n                        </div>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                    </>\r\n                }\r\n                \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Quiz;","import React, {Component} from 'react';\r\nimport ChoiceQuiz from '../components/ChoiceQuiz';\r\nimport Baseline from '../components/Baseline';\r\nimport Quiz from '../components/Quiz';\r\nimport Mimicking from '../components/Mimicking';\r\nimport Production from '../components/Production';\r\nimport {\r\n    Route,\r\n  } from \"react-router-dom\";\r\n\r\n\r\nclass Activity extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            lesson: {}, \r\n            audioRes: [],\r\n            audios:[],\r\n            audioParse: [],\r\n            userScores:[]\r\n        }\r\n        this.sendScore = this.sendScore.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try{\r\n            const lesson = await (await fetch(`/api/lessons/${this.props.match.params.name}`)).json()\r\n            this.setState({lesson});\r\n        } catch (ex) {\r\n            console.log(ex);\r\n        }\r\n    }\r\n\r\n    sendScore(score, sum_total, recordings){\r\n        fetch('/api/quizScores/add/', {\r\n            method: 'POST',\r\n            headers: {\"Content-Type\":\"application/json\"},\r\n            \r\n            body:JSON.stringify({\r\n                \"lesson\": this.props.match.params.name,\r\n                \"user\": this.props.user,\r\n                \"score\": score,\r\n                \"maxScore\": sum_total,\r\n                \"recordings\": recordings || ''\r\n            })\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {this.state.lesson.words && \r\n                    <div>\r\n                        <h3>Lesson: {this.props.match.params.name}</h3>\r\n                        <h2>Activity {this.props.match.params.activityNumber}</h2>\r\n                    \r\n                        <Route path={`/lessons/${this.props.match.params.name}/1`}>\r\n                            <ChoiceQuiz stimuli={this.state.lesson.words} choices=\"2\" />\r\n        \r\n                        </Route>\r\n                        <Route path={`/lessons/${this.props.match.params.name}/2`}>\r\n                            <ChoiceQuiz stimuli={this.state.lesson.words} choices=\"4\"/>\r\n                        </Route>\r\n                        <Route path={`/lessons/${this.props.match.params.name}/3`}>\r\n                            {Boolean(this.props.baseline) === false ?\r\n                                <Baseline outputFunction={this.props.setBaseline} />\r\n                            :\r\n                                <Mimicking lesson={this.state.lesson} />\r\n                            }\r\n                        </Route>\r\n                        <Route path={`/lessons/${this.props.match.params.name}/4`}>\r\n                            {Boolean(this.props.baseline) === false ?\r\n                                <Baseline outputFunction={this.props.setBaseline} />\r\n                            :\r\n                                <Production lesson={this.state.lesson} />\r\n                            }\r\n                        </Route>\r\n                        <Route path={`/lessons/${this.props.match.params.name}/quiz`}>\r\n                            <Quiz activities={this.state.lesson.quizSections} stimuli={this.state.lesson.words} lesson={this.state.lesson} username={this.props.user} sendScore={this.sendScore}/>\r\n                        </Route>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Activity;","import React, { Component } from 'react';\r\n\r\nclass AudioUpload extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            word: '',\r\n            alternateTones: [],\r\n            correct: '',\r\n            lessonName: '' \r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.createAlternateToneArray = this.createAlternateToneArray.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    createAlternateToneArray(){\r\n        const altTone1 = document.getElementById(\"altTone1\").value; \r\n        const altTone2 = document.getElementById(\"altTone2\").value; \r\n        const altTone3 = document.getElementById(\"altTone3\").value; \r\n        this.setState({\r\n            alternateTones: [altTone1, altTone2, altTone3]\r\n        })\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        let formData = new FormData();\r\n        formData.append('word', this.state.word);\r\n        formData.append('alternateTones', this.state.alternateTones);\r\n        formData.append('correct', this.state.correct);\r\n        formData.append('lessonName', this.state.lessonName);\r\n        formData.append('audioFile', document.getElementById(\"audioFileInput\").files[0])\r\n        fetch(\"/api/uploadAudio/\", {\r\n            method: \"POST\",\r\n            body: formData,\r\n        }).then((response) => {\r\n            console.log(response)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <form onSubmit={this.handleSubmit} className =\"audioForm\">\r\n                    <label for=\"audioFileInput\">\r\n                       Audio File:\r\n                    </label>\r\n                    <input \r\n                            id=\"audioFileInput\"\r\n                            type=\"file\" \r\n                            name=\"audioFile\"\r\n                        />\r\n                    <label for =\"word\">\r\n                        Word:\r\n                    </label>\r\n                    <input \r\n                            id=\"word\"\r\n                            type=\"text\" \r\n                            name=\"word\"\r\n                            value={this.state.word}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                    <label for=\"tone\">\r\n                        Correct Tone:\r\n                    </label>\r\n                    <input \r\n                            id=\"tone\"\r\n                            type=\"text\"\r\n                            name=\"correct\"\r\n                            value={this.state.correct}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                    <label for=\"altTone1\">\r\n                        Alternate Tone 1:\r\n                    </label>\r\n                        <input\r\n                            id=\"altTone1\"\r\n                            type=\"text\"\r\n                            name=\"altTone1\"\r\n                            value={this.state.alternateTones[0]}\r\n                            onChange={this.createAlternateToneArray}\r\n                        />\r\n                    <label for=\"altTone2\">\r\n                        Alternate Tone 2:\r\n                    </label>\r\n                        <input\r\n                            id=\"altTone2\"\r\n                            type=\"text\"\r\n                            name=\"altTone2\"\r\n                            value={this.state.alternateTones[1]}\r\n                            onChange={this.createAlternateToneArray}\r\n                        />\r\n                    <label for=\"altTone3\">\r\n                        Alternate Tone 3:\r\n                    </label>\r\n                        <input\r\n                            id=\"altTone3\"\r\n                            type=\"text\"\r\n                            name=\"altTone3\"\r\n                            value={this.state.alternateTones[2]}\r\n                            onChange={this.createAlternateToneArray}\r\n                        />\r\n                    <label for=\"lesson\">\r\n                        Lesson Name:\r\n                    </label>\r\n                    <input\r\n                            id=\"lesson\"\r\n                            type=\"text\"\r\n                            name=\"lessonName\"\r\n                            value={this.state.lessonName}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                    <label id=\"submitButton\">\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Submit\"\r\n                        />\r\n                    </label>\r\n\r\n                </form>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AudioUpload;","import React, { Component } from \"react\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass LessonForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        // console.log(`some words! ${props.words}`)\r\n        // var startingWords;\r\n        // startingWords = props.words.map((word) => {\r\n        //     console.log(word.character);\r\n        //     return word.character;\r\n        // });\r\n        this.state = {\r\n            name: props.name || '',\r\n            description: props.description || '',\r\n            words: props.words || [],\r\n            wordKeys: [],\r\n            is_quiz: props.is_quiz || false,\r\n            quiz_sections: props.quiz_sections || [1,2,3,4],\r\n            all_words: [],\r\n            form_complete: false\r\n        }\r\n        console.log(props);\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n        this.fetchAllWords = this.fetchAllWords.bind(this);\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.matchWord = this.matchWord.bind(this);\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n        this.deleteLesson = this.deleteLesson.bind(this);\r\n        this.is_checked = this.is_checked.bind(this);\r\n        this.handleSectionChange = this.handleSectionChange.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const all_words = await this.fetchAllWords();\r\n        // const {name, description, words, is_quiz, editing} = this.props;\r\n        this.setState({all_words});\r\n        // this.setState({name, description, words, is_quiz, editing});\r\n        // this.setState({name});\r\n    }\r\n\r\n    async fetchAllWords(){\r\n        const all_words = await (await fetch('/api/words/all/')).json();\r\n        return all_words;\r\n    }\r\n\r\n    handleInputChange(event){\r\n        var attribute = event.target.name;\r\n        var value = event.target.value;\r\n        this.setState({[attribute]: value})\r\n    }\r\n\r\n    handleCheckboxChange(){\r\n        var prevState = this.state.is_quiz;\r\n        this.setState({is_quiz: !prevState})\r\n    }\r\n\r\n    handleSectionChange(num){\r\n        console.log(this.state.quiz_sections);\r\n        var array = this.state.quiz_sections; \r\n        var index = null;\r\n        if(this.is_checked(num)){\r\n            index = array.indexOf(num); \r\n            // delete array[index];\r\n            array.splice(index,1);\r\n        }else{\r\n            array.push(num);\r\n        }\r\n\r\n\r\n        this.setState({quiz_sections:array});\r\n        \r\n\r\n    }\r\n\r\n    handleSelectChange(event){\r\n        const options = event.target.options;\r\n        var selected = [];\r\n        var selected_keys = [];\r\n        for(let i = 0; i < options.length; i++){\r\n            if(options[i].selected){\r\n                selected.push(options[i].value);\r\n                selected_keys.push(options[i].id);\r\n            }\r\n        }\r\n        this.setState({words:selected});\r\n        this.setState({wordKeys:selected_keys});\r\n    }\r\n\r\n    deleteLesson(){\r\n        const method = 'DELETE';\r\n        const url = `/api/lessons/${this.props.name}/delete`;\r\n\r\n        fetch(url,{\r\n            method: method,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name\r\n            })\r\n        }).then( () => {\r\n            console.log(\"deleted\");\r\n        });\r\n\r\n    }\r\n\r\n    handleSubmit(event){\r\n        console.log(\"in handle\");\r\n        event.preventDefault();\r\n        var method = this.props.editing ? 'PUT' : 'POST';\r\n        var url = '/api/lessons/add/';\r\n        if(this.props.editing && this.state.name ===this.props.name){\r\n            url = `/api/lessons/${this.state.name}/edit`;\r\n        } else if (this.props.editing && this.state.name !== this.props.name){\r\n            this.deleteLesson();\r\n            method = \"POST\";\r\n        }\r\n        console.log(url);\r\n        fetch(url,{\r\n            method: method,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                description: this.state.description,\r\n                words: this.state.wordKeys,\r\n                is_quiz: this.state.is_quiz,\r\n                quizSections: this.state.quiz_sections\r\n            })\r\n        }).then( () => {\r\n            console.log(\"success\");\r\n            this.setState({form_complete: true})\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.words !== this.props.words){\r\n            const newWords = this.props.words.map( (word) => {\r\n                return word.character;\r\n            })\r\n            this.setState({words:newWords});\r\n        }\r\n    }\r\n\r\n    matchWord(word){\r\n        for(var i=0; i<this.state.words.length; i++){\r\n            if (this.state.words[i]._id===word){\r\n                console.log(true);\r\n                return true;\r\n                \r\n            }else{\r\n                console.log(false);\r\n                return false;\r\n                \r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    is_checked(num){\r\n        if(this.props.quiz_sections || this.state.quiz_sections){\r\n            for (var i=0; i<this.state.quiz_sections.length; i++){\r\n                if(this.state.quiz_sections[i]===num){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {this.state.form_complete ?\r\n                    <Redirect to='/teacherInterface/' />\r\n                :\r\n                    <>\r\n                        {this.props.editing ?\r\n                         <h1>Editing {this.props.name}</h1>\r\n                        :\r\n                         <h1>New lesson</h1>}\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <label htmlFor=\"name\">\r\n                                Name:\r\n                            </label>\r\n                                <input \r\n                                    id=\"name\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    value={this.state.name}\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n                            <label htmlFor=\"description\">\r\n                                Description:\r\n                            </label>\r\n                                <input \r\n                                    id=\"description\"\r\n                                    type=\"text\"\r\n                                    name=\"description\"\r\n                                    value={this.state.description}\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n                            <label htmlFor=\"words\">\r\n                                Words\r\n                            </label>\r\n                                <select\r\n                                    id=\"words\"\r\n                                    multiple={true}\r\n                                    name=\"words\"\r\n                                    value={this.state.words}\r\n                                    onChange={this.handleSelectChange}\r\n                                    size=\"7\"\r\n                                >\r\n                                    {this.state.all_words && this.state.all_words.map( (word) => {\r\n                                        return <option  key={word._id} id={word._id} value={word.character}>{word.character}</option>\r\n                                    })}\r\n                                \r\n                                </select>\r\n                            <label htmlFor=\"is_quiz\">\r\n                                Is this lesson a quiz?:\r\n                            </label>\r\n                            <input \r\n                                    id=\"is_quiz\"\r\n                                    checked={!!this.state.is_quiz}\r\n                                    type=\"checkbox\"\r\n                                    name=\"is_quiz\"\r\n                                    value={this.state.is_quiz}\r\n                                    onChange={this.handleCheckboxChange}\r\n                            />\r\n                            {this.state.is_quiz ? \r\n                                <>\r\n                                    <h3>Which activities would you like in this quiz?</h3>\r\n                                    <label htmlFor=\"sec_one\">Activity 1: Distinguishing (2-choice quiz)</label>\r\n                                    <input \r\n                                        id=\"sec_one\"\r\n                                        checked={this.is_checked(1)}\r\n                                        type=\"checkbox\"\r\n                                        name=\"sec_one\"\r\n                                        value=\"1\"\r\n                                        onClick={() => this.handleSectionChange(1)}\r\n                                    />\r\n                                    <label htmlFor=\"sec_two\">Activity 2: Identifying (4-choice quiz)</label>\r\n                                    <input \r\n                                        id=\"sec_two\"\r\n                                        checked={this.is_checked(2)}\r\n                                        type=\"checkbox\"\r\n                                        name=\"sec_two\"\r\n                                        value=\"2\"\r\n                                        onChange={() => this.handleSectionChange(2)}\r\n                                    />\r\n                                    <label htmlFor=\"sec_three\">Activity 3: Mimicking (record with teacher example)</label>\r\n                                    <input \r\n                                        id=\"sec_three\"\r\n                                        checked={this.is_checked(3)}\r\n                                        type=\"checkbox\"\r\n                                        name=\"sec_three\"\r\n                                        value=\"3\"\r\n                                        onChange={() => this.handleSectionChange(3)}\r\n                                    />\r\n                                    <label htmlFor=\"sec_four\">Activity 4: Producing (record without teacher example)</label>\r\n                                    <input \r\n                                        id=\"sec_four\"\r\n                                        checked={this.is_checked(4)}\r\n                                        type=\"checkbox\"\r\n                                        name=\"sec_four\"\r\n                                        value=\"4\"\r\n                                        onChange={() => this.handleSectionChange(4)}\r\n                                    />\r\n\r\n                                </>\r\n                                :\r\n                                <>\r\n                                </>\r\n                            }\r\n                            <input type=\"submit\" value=\"Submit\" />\r\n                        </form>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LessonForm;","import React, { Component } from \"react\";\r\nimport LessonForm from './LessonForm';\r\n\r\nclass LessonEdit extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            lesson: {},\r\n            words: []\r\n        }\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const lesson = await (await fetch(`/api/lessons/${this.props.match.params.name}/`)).json();\r\n        this.setState({lesson});\r\n\r\n        const words = await(await fetch(`/api/lessons/${this.props.match.params.name}/words/`)).json();\r\n        this.setState({words});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            {this.state.lesson.name &&\r\n                <LessonForm name={this.state.lesson.name} \r\n                description={this.state.lesson.description} \r\n                words={this.state.words} \r\n                is_quiz={this.state.lesson.is_quiz} \r\n                editing={true}\r\n                quiz_sections={this.state.lesson.quizSections} />\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LessonEdit;","import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LessonDelete extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            deleted:false,\r\n            response: \"\"\r\n        }\r\n        this.delete = this.delete.bind(this);\r\n    }\r\n\r\n    delete(){\r\n        fetch(`/api/lessons/${this.props.match.params.name}/delete`, {method:\"DELETE\"})\r\n            .then( (response) => response.text()\r\n                .then( (result) => {\r\n                    console.log(\"deleted\");\r\n                    this.setState({response: result});\r\n                    this.setState({deleted:true});\r\n                    }\r\n                )\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"lesson delete\"> \r\n                {this.state.deleted ? \r\n                    <>\r\n                    <p>{this.state.response}</p>\r\n                    <Link to=\"../../\">Back to lessons</Link>\r\n                    \r\n                    </>\r\n                :\r\n                    <>\r\n                    <h3>Are you sure you want to delete {this.props.match.params.name}?</h3>\r\n                    <button onClick={this.delete}>Delete</button>\r\n                    </>\r\n                    \r\n                }\r\n                \r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default LessonDelete;\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../../css/teacherInterface.css';\r\nimport '../../css/lessons.css';\r\n\r\nclass TeacherLessonDirectory extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            lessons: []\r\n        }\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        var lessons = await (await fetch(\"/api/lessons/all/\")).json();\r\n        this.setState({lessons: lessons});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {this.state.lessons && \r\n                    <>\r\n                        <Link to={'/teacherInterface/lessons/add'} id=\"addLessonLink\">\r\n                            + &emsp;Add a Lesson\r\n                        </Link>\r\n                        <h1>Lessons:</h1>\r\n                        <ul>\r\n                            {this.state.lessons.map( (lesson) => {\r\n                                return <Link to={`/teacherInterface/lessons/${lesson.name}/`} key={lesson.name} props={lesson} className=\"teacherCardLink\">\r\n                                    <div className=\"teacherCard lessonCard\">\r\n                                        <div className=\"meta\" onClick={this.toggleActivityList}>\r\n                                            <h2>{lesson.is_quiz ? 'Quiz: ' : 'Lesson: '}{lesson.name}</h2>\r\n                                            <p>{lesson.description}</p>\r\n                                            <Link to={`/teacherInterface/lessons/${lesson.name}/edit/`} key={lesson.name} className=\"teacherEditLink\">Edit Lesson</Link>\r\n                                            <Link to={`/teacherInterface/lessons/${lesson.name}/delete/`} key={`delete${lesson.name}`} className=\"teacherDeleteLink\">Delete Lesson</Link>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                                    \r\n                            })}\r\n                        </ul>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TeacherLessonDirectory;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LessonShow extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            lesson:  {}\r\n        }\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.fetchLesson = this.fetchLesson.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if(!!this.state.lesson){\r\n            this.fetchLesson();\r\n        }\r\n    }\r\n\r\n    async fetchLesson(){\r\n        const lesson = await (await fetch(`/api/lessons/${this.props.match.params.name}`)).json();\r\n        this.setState({lesson});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className =\"lesson show\">\r\n                <Link to={`/teacherInterface/lessons/${this.state.lesson.name}/edit/`} key={this.state.lesson.name} className=\"teacherEditLink\">Edit Lesson</Link>\r\n                <h2>{this.state.lesson.name}</h2>\r\n                <h3>Description:</h3>\r\n                <p>{this.state.lesson.description}</p>\r\n                {this.state.lesson.words &&\r\n                    <>\r\n                        <h3>Words:</h3>\r\n                        <ul>\r\n                            {this.state.lesson.words.map( (word) => {\r\n                            return <li key={word._id}>{word.character}</li>\r\n                            })}\r\n                        </ul>\r\n                    </>\r\n                }\r\n                {this.state.lesson.is_quiz ? \r\n                    <>\r\n                        <p id=\"is_quiz\">This lesson is a quiz, containing the following activities:</p>\r\n                        <ul>\r\n                            {this.state.lesson.quizSections.map( (activity) => {\r\n                                return <li key={activity}>{activity}</li>\r\n                            })}\r\n                        </ul>\r\n                    </>\r\n                :\r\n                    <p>This is a lesson, not a quiz.</p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LessonShow;","import React, { Component } from 'react';\r\nimport AudioUpload from '../components/AudioUpload';\r\n// import TeacherNav from '../components/TeacherNav';\r\nimport LessonForm from '../components/lessons/LessonForm';\r\nimport LessonEdit from '../components/lessons/LessonEdit';\r\nimport LessonDelete from '../components/lessons/LessonDelete';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport TeacherLessonDirectory from '../components/lessons/TeacherLessonDirectory';\r\nimport LessonShow from '../components/lessons/LessonShow';\r\n\r\nclass TeacherInterface extends Component {\r\n\r\n\r\n    render(){\r\n        return(\r\n            <Switch>\r\n                <Route path=\"/teacherInterface/lessons/:name/edit/\" component={LessonEdit} />\r\n                <Route path=\"/teacherInterface/lessons/:name/delete/\" component={LessonDelete} />\r\n                <Route path=\"/teacherInterface/lessons/add/\" component={LessonForm} />\r\n                <Route path=\"/teacherInterface/lessons/:name/\" component={LessonShow} />\r\n                <Route path=\"/teacherInterface/lessons/\" component={TeacherLessonDirectory} />\r\n                <Route path=\"/teacherInterface/words/add\" component={AudioUpload} />\r\n                <Route path=\"/teacherInterface/\" component={TeacherLessonDirectory} />\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TeacherInterface;","import React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nclass SignUp extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            password2: '',\r\n            baseline: null,\r\n            is_teacher: false,\r\n            form_complete: false,\r\n            preventSubmit:false,\r\n            errorMessage:''\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    }\r\n\r\n\r\n    handlePasswordChange(){\r\n        // var attribute = event.target.name;\r\n        // var value = event.target.value;\r\n        if(this.state.password !== this.state.password2){\r\n            console.log(\"error\");\r\n            this.setState({\"errorMessage\": \"Your passwords do not match.\"})\r\n            this.setState({\"preventSubmit\": true});\r\n        }else if(this.state.password===this.state.password2){\r\n            console.log(\"match\");\r\n            this.setState({\"errorMessage\": \"\"})\r\n            this.setState({\"preventSubmit\": false});\r\n        }\r\n\r\n        // this.setState({[attribute]: value})\r\n    }\r\n\r\n\r\n    async handleInputChange(event){\r\n        var attribute = event.target.name;\r\n        var value = event.target.value;\r\n        this.setState({[attribute]: value}, () =>{\r\n            if (attribute === \"password\" || attribute ===\"password2\"){\r\n                this.handlePasswordChange();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    handleCheckboxChange(){\r\n        var prevState = this.state.is_teacher;\r\n        this.setState({is_teacher: !prevState})\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        if(this.state.preventSubmit === false){\r\n            const method = this.props.editing ? 'PUT' : 'POST';\r\n            fetch('/api/signup/',{\r\n                method: method,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password,\r\n                    baseline: this.state.baseline,\r\n                    is_teacher: this.state.is_teacher\r\n                })\r\n            }).then( async (response) => {\r\n                const message = await response.text();\r\n                if (message ===\"Username taken, please try another.\"){\r\n                    this.setState({\"errorMessage\": message})\r\n                }else{\r\n                    this.setState({form_complete: true})\r\n                }\r\n                \r\n            });\r\n        } else if(this.state.preventSubmit===true){\r\n            this.setState({\"errorMessage\": this.state.errorMessage + \"  Please correct errors before submitting.\"})\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {this.state.form_complete ?\r\n                    <Redirect to='/' />\r\n                :\r\n                    <>\r\n                    <form id=\"signUp\" onSubmit={this.handleSubmit}>\r\n                        <h2>Sign Up</h2>\r\n                        <label htmlFor=\"username\">Username:</label>\r\n                        <input\r\n                            id=\"username\"\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={this.state.password}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <label htmlFor=\"password2\">Re-enter password:</label>\r\n                        <input\r\n                            id=\"password2\"\r\n                            type=\"password\"\r\n                            name=\"password2\"\r\n                            value={this.state.password2}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        {/* <label htmlFor=\"is_teacher\">Check this box if you are a teacher.</label>\r\n                        <input\r\n                            id=\"is_teacher\"\r\n                            type=\"checkbox\"\r\n                            checked={!!this.state.is_teacher}\r\n                            name=\"is_teacher\"\r\n                            value={this.state.is_teacher}\r\n                            onChange={this.handleCheckboxChange}\r\n                        /> */}\r\n                        <p id=\"error\">{this.state.errorMessage}</p>\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                        <p>If you are a teacher, please <a href=\"mailto:yinwebapp@gmail.com\">contact us</a> for special permissions.</p>\r\n\r\n                    </form>\r\n                    \r\n                    </>}\r\n                \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport './css/activities.css';\r\nimport './css/LADirectoryStyle.css';\r\nimport './css/style.css';\r\nimport './css/lessons.css';\r\nimport BaselineExplanation from './components/BaselineExplanation';\r\nimport Baseline from './components/Baseline';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport Home from './pages/Home';\r\nimport Login from './components/Login';\r\nimport LessonDirectory from './pages/LessonDirectory';\r\nimport Activity from './pages/Activity';\r\nimport TeacherInterface from './pages/TeacherInterface';\r\nimport SignUp from './pages/SignUp';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nclass App extends React.Component{\r\n\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      \"lessonOpen\":true,\r\n      isLoggedIn: false,\r\n      username: '',\r\n      baseline: 0,\r\n      is_teacher: false,\r\n      error:\"\"\r\n    }\r\n    this.toggleLessonActivity = this.toggleLessonActivity.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.setBaseline = this.setBaseline.bind(this);\r\n    this.checkLogin = this.checkLogin.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.checkLogin()\r\n  }\r\n\r\n  toggleLessonActivity(){\r\n    this.setState({lessonOpen: !this.state.lessonOpen});\r\n  }\r\n\r\n  async setBaseline(value){\r\n    this.setState({baseline: value});\r\n    await fetch('/api/user/baseline/add/', {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify({\r\n        baseline: value\r\n      })\r\n    });\r\n  }\r\n\r\n  async checkLogin(){\r\n    const session = await fetch('/api/user/me/');\r\n    if(session.status === 401 || session.status === 404){\r\n      return false;\r\n    } else {\r\n      const isLoggedIn = true;\r\n      // const baselineResponse = await fetch('/api/user/me/');\r\n      const userdata = await session.json();\r\n      const is_teacher = userdata.is_teacher;\r\n      const username = userdata.username\r\n      const baseline = Number(userdata.baseline);\r\n      this.setState({username, isLoggedIn, baseline, is_teacher});\r\n    }\r\n  }\r\n\r\n  submitForm(event, username, password) {\r\n        event.preventDefault();\r\n        fetch('/api/login/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'include',\r\n            body: JSON.stringify(\r\n                {\r\n                    \"username\":username,\r\n                    \"password\":password\r\n                }\r\n            )\r\n        }).then( (response) => {\r\n            if (response.status ===401){\r\n              this.setState({error:\"Username or password is incorrect.\"});\r\n            }else{\r\n              response.text().then( (token) => {\r\n                this.setState({error:\"\"});\r\n                this.setState( {isLoggedIn: true});\r\n                this.setState( {username: username});\r\n              })\r\n            }\r\n          })\r\n        \r\n    }\r\n\r\n  render(){\r\n    return (\r\n      <Router>\r\n      <Header is_teacher={this.state.is_teacher} isLoggedIn={this.state.isLoggedIn} username={this.state.username} />\r\n      \r\n        {this.state.isLoggedIn ? \r\n          <> \r\n            <Switch>\r\n              <Route path=\"/baseline/\" component={Baseline} />\r\n              <Route path=\"/teacherInterface/\" component={TeacherInterface} />\r\n              <Route path=\"/lessons/:name/:activityNumber\" render={(props) => <Activity baseline={this.state.baseline} {...props} setBaseline={this.setBaseline} user={this.state.username} />} />\r\n              {/* <Route path=\"/lessons/:name/\" component={LessonShow} /> */}\r\n              <Route path=\"/lessons/\" component={LessonDirectory} />\r\n              <Route path=\"/\" component={Home} />\r\n            </Switch>\r\n          </>\r\n        : \r\n          <>\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/SignUp\">\r\n                  <SignUp />\r\n                </Route>\r\n                <Route exact path=\"*/explanation\">\r\n                  <BaselineExplanation/>\r\n                </Route>\r\n                <Route exact path=\"/*\">\r\n                  <Login submitForm={this.submitForm} error={this.state.error} />\r\n                </Route>\r\n              </Switch>\r\n            </>\r\n          }\r\n        <Footer />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}