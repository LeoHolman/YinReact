{"version":3,"sources":["assets/images/Yin_Classroom_logo@4x.png","assets/images/studentImg2.jpg","assets/images/teacherImg.jpg","assets/images/1_graph.svg","assets/images/2_graph.svg","assets/images/3_graph.svg","assets/images/4_graph.svg","assets/images/yin1.svg","assets/images/yin2.svg","assets/images/yin3.svg","components/BaselineExplanation.js","components/Recorder.js","components/Baseline.js","components/Footer.js","components/Nav.js","components/Header.js","pages/Home.js","components/PitchChart.js","components/AudioPlayer.js","components/Mimicking.js","components/Login.js","components/LessonDirectoryCard.js","pages/LessonDirectory.js","components/lessons/LessonShow.js","components/Answer.js","components/FeedbackBox.js","components/ChoiceQuiz.js","components/Production.js","components/Quiz.js","pages/Activity.js","components/AudioUpload.js","components/lessons/LessonForm.js","components/lessons/LessonEdit.js","components/lessons/LessonDelete.js","components/lessons/TeacherLessonDirectory.js","pages/TeacherInterface.js","pages/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BaselineExplanation","id","Component","Recorder","props","state","record","addRecordFunction","bind","this","then","blob","processAudio","csvDataLocation","a","async","start","search","end","url","substring","getDataSet","data","outputFunction","fetch","text","buttonId","Promise","resolve","audioBlob","recordButton","document","getElementById","navigator","mediaDevices","getUserMedia","audio","stream","mediaRecorder","MediaRecorder","style","backgroundColor","audioChunks","addEventListener","event","push","Blob","type","setTimeout","stop","formData","FormData","append","method","body","res","onClick","label","Baseline","setBaseline","dataset","baseline","extractAverage","parsedData","d3","runningTotal","map","__data","Number","frequency","length","href","Footer","className","Nav","to","is_teacher","Header","src","Logo","alt","Home","student","teacher","PitchChart","componentDidMount","drawPitchChart","drawPitchCurve","divID","width","height","attr","i","y","standardDeviation","color","chartID","datarecord","point","time","x","classed","curve","console","log","remove","AudioPlayer","controls","audioFile","Mimicking","userDataset","currentStimuli","allowAdvance","passDataToState","nextWord","username","headers","JSON","stringify","statusText","setState","lesson","is_quiz","uploadRecording","words","character","String","native_recording","Login","fusername","fpassword","error","handleChange","handleForm","target","value","password","preventDefault","submitForm","onSubmit","e","htmlFor","name","placeholder","onChange","LessonDirectoryCard","activityOpen","toggleActivityList","link","textDecoration","LessonName","LessonDesc","LessonDirectory","allLessons","response","json","result","key","_id","LessonShow","getWords","match","params","undefined","word","description","Answer","number","One","Two","Three","Four","collectResponse","backgroundImage","chooseImage","role","aria-label","FeedbackBox","status","ChoiceQuiz","currentStimulus","options","active","submitted","answers","score","handleClick","handleSubmit","nextQuestion","reset","chooseTones","randomize","displayAnswers","reportScore","classList","add","visibility","responses","getElementsByClassName","stimuli","correctTone","questionLabel","j","Math","floor","random","correct","optionArr","randomArr","choices","splice","opt","refs","pause","load","ref","quiz","Quiz","activity1","maxpoints","activity2","activity3","recordings","activity4","current","prev","sum_score","sum_total_score","captureScore","advance","recordScore","initialize","activities","localStorage","token","includes","max_score","array1","allRecordings","concat","sendScore","num","next","activity","activitynum","num1","num2","fullLesson","Production","toPercent","Activity","audioRes","audios","audioParse","userScores","sum_total","user","activityNumber","path","Boolean","quizSections","AudioUpload","alternateTones","lessonName","handleInputChange","createAlternateToneArray","checked","altTone1","altTone2","altTone3","files","for","LessonForm","wordKeys","quiz_sections","all_words","form_complete","handleCheckboxChange","fetchAllWords","handleSelectChange","matchWord","componentDidUpdate","deleteLesson","is_checked","handleSectionChange","attribute","prevState","array","index","indexOf","selected","selected_keys","editing","prevProps","newWords","multiple","size","LessonEdit","LessonDelete","deleted","delete","TeacherLessonDirectory","lessons","TeacherInterface","component","SignUp","password2","preventSubmit","errorMessage","handlePasswordChange","message","App","hasToken","isLoggedIn","toggleLessonActivity","window","ev","clear","lessonOpen","setItem","render","exact","React","location","hostname","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.075fb37a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Yin_Classroom_logo@4x.f472b60e.png\";","module.exports = __webpack_public_path__ + \"static/media/studentImg2.76cd4ea4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/teacherImg.4cccd371.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1_graph.4059374e.svg\";","module.exports = __webpack_public_path__ + \"static/media/2_graph.ec56be3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/3_graph.d05b49b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/4_graph.70af4f87.svg\";","module.exports = __webpack_public_path__ + \"static/media/yin1.a4fc2c7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/yin2.bf98447d.svg\";","module.exports = __webpack_public_path__ + \"static/media/yin3.00dce588.svg\";","import React, {Component} from 'react';\r\n\r\n\r\nclass BaselineExplanation extends Component{\r\n    render(){\r\n        return(\r\n            <div id =\"baseline-explanation\">\r\n                <p>Since pitch is relative to a speaker's voice, we need to know what your natural voice sounds like so that we can calibrate the curve accoridngly. </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BaselineExplanation;","import React, { Component } from 'react';\r\n\r\nclass Recorder extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            record: []\r\n        }\r\n        this.addRecordFunction = this.addRecordFunction.bind(this);\r\n    }\r\n\r\n    async addRecordFunction() {\r\n        // self.innerHTML = \"Recording\";\r\n        this.record(\"__record_button\")\r\n            .then( blob => {\r\n                // self.innerHTML = \"Done\"\r\n                this.processAudio(blob)\r\n                    .then( async (csvDataLocation) => {\r\n                        const start = csvDataLocation.search(/(\\*\\*\\*)/)+5\r\n                        const end = csvDataLocation.search('&&&')\r\n                        var url = csvDataLocation.substring(start,end)\r\n                        url = 'https://yin.rit.edu/' + url;\r\n                        // this.drawPitchCurve(url, 1100,500);\r\n                        const data = await this.getDataSet(url);\r\n                        this.props.outputFunction(data);\r\n                    })\t\r\n            })\r\n    }\r\n\r\n    async getDataSet(url){\r\n        const data = await (await fetch(`${url}`)).text();\r\n        return data;\r\n    }\r\n\r\n    record(buttonId) {\r\n        return new Promise(resolve => {\r\n            // var audio;\r\n            // var audioUrl;\r\n            var audioBlob;\r\n            const recordButton = document.getElementById(buttonId);\r\n            navigator.mediaDevices.getUserMedia({\r\n                    audio: true\r\n                })\r\n                .then(stream => {\r\n                    const mediaRecorder = new MediaRecorder(stream);\r\n                    mediaRecorder.start();\r\n                    recordButton.style.backgroundColor = \"red\";\r\n    \r\n                    const audioChunks = [];\r\n    \r\n                    mediaRecorder.addEventListener(\"dataavailable\", event => {\r\n                        audioChunks.push(event.data);\r\n                    });\r\n    \r\n                    mediaRecorder.addEventListener(\"stop\", () => {\r\n                        audioBlob = new Blob(audioChunks, {\r\n                            type: 'audio/wav; codecs=MS_PCM'\r\n                        });\r\n                        resolve(audioBlob);\r\n                    });\r\n    \r\n                    setTimeout(() => {\r\n                        mediaRecorder.stop();\r\n                        recordButton.style.backgroundColor = \"green\";\r\n                    }, 2000);\r\n                });\r\n        })\r\n    };\r\n\r\n    async processAudio(audioBlob) {\r\n        return new Promise(resolve => {\r\n            // var rawResponse;\r\n            // var csvDataLocation;\r\n            var formData = new FormData();\r\n            formData.append(\"audioData\", audioBlob);\r\n            fetch('https://yin.rit.edu/pages/audioProcessing.php', {\r\n                method: 'POST', \r\n                body: formData,\r\n            }).then((res) => resolve(res.text()));\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <button onClick={this.addRecordFunction} id=\"__record_button\">{this.props.label}</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Recorder;","import React, {Component} from 'react';\r\nimport Recorder from './Recorder';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nclass Baseline extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.setBaseline = this.setBaseline.bind(this);\r\n    }\r\n\r\n    setBaseline(dataset){\r\n        const baseline = this.extractAverage(dataset);\r\n        this.props.outputFunction(baseline);\r\n    }\r\n\r\n    extractAverage(dataset){\r\n        const parsedData = d3.tsvParse(dataset);\r\n        var runningTotal = 0;\r\n        parsedData.map( (__data) => {\r\n            runningTotal += Number(__data.frequency);\r\n        });\r\n        const baseline = runningTotal / parsedData.length\r\n        return baseline;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id =\"activity-3-baseline\">\r\n                <h3>Record Baseline</h3>\r\n                <p>The following activity is designed to help you improve your ability to produce tone by mimicking a native speaker. You'll be given an audio recording of a native speaker saying a word, and asked to record yourself saying the word. You'll be shown the pitch curve of the native speaker, and after you finish your recording, your pitch curve will be placed along side it for your to compare.</p>\r\n                <p>To begin, please press the \"Record Baseline\" button and say aloud, \"This is my normal speaking voice.\"</p>\r\n                <Recorder id=\"baseline\" label=\"Baseline\" outputFunction={this.setBaseline} />\r\n                <p>\r\n                    <a href=\"/explanation\">Why are we asking you to do this?</a>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Baseline;","import React, {Component} from 'react';\r\n\r\nclass Footer extends Component{\r\n    render(){\r\n        return(\r\n            <footer>\r\n                <div className = \"footer\">\r\n                    <p>© Leo Holman and Christine McCullough</p>\r\n                    <p>Have any problems, comments, or suggestions? <br/>Contact us at: <a href=\"mailto:yinwebapp@gmail.com\">yinwebapp@gmail.com</a></p>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass Nav extends Component {\r\n    render(){\r\n        return(\r\n            <nav>\r\n                <ul>\r\n                    <li><a href=\"https://yin.rit.edu\">Return to Yin </a></li>\r\n                    <li><Link to=\"/lessons/\">Lessons & Quizzes &emsp;|</Link></li>\r\n                    <li><Link to=\"/login/\">Login &emsp;|</Link> </li>\r\n                    {this.props.is_teacher &&\r\n                        <li><Link to=\"/teacherInterface/\">Teachers &emsp;|</Link></li>}\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Nav from './Nav.js';\r\nimport Logo from '../assets/images/Yin_Classroom_logo@4x.png';\r\n\r\nclass Header extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"header\">\r\n                <Link to=\"/\"><img src={Logo} id=\"logo\" alt=\"jojo the monkey walking by the yin logo\"/></Link>\r\n                <Nav is_teacher={this.props.is_teacher} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport '../css/Home.css'\r\nimport yin1 from '../assets/images/yin1.svg'\r\nimport yin2 from '../assets/images/yin2.svg'\r\nimport yin3 from '../assets/images/yin3.svg'\r\nimport student from '../assets/images/studentImg2.jpg';\r\nimport teacher from '../assets/images/teacherImg.jpg';\r\n\r\nclass Home extends Component {\r\n    render(){\r\n        return (\r\n            <>\r\n                <div id = \"main\" className =\"classroom\">\r\n                    <div id=\"img-container\"></div>\r\n                   <h2>Welcome to Yin classroom!</h2>\r\n                   <p id=\"summary\">Yin Classroom is a companion to Yin to facilitate using Yin's tools and activities in the classroom.\r\n                        Teachers can create lessons to correspond with classroom curriculum, upload audio for vocabulary lists, and add quizzes to test their students.\r\n                       Students can practice the words they'll actually need to know for class, and take quizzes at their convenience.\r\n                   </p>\r\n                   <section className=\"intro\">\r\n                        <div id=\"students\">\r\n                            <h3>STUDENTS</h3>\r\n                            <img src={student}/>\r\n                            <p>In Yin Classroom, you can test yourself with activities based on lessons you're learning in the classroom. \r\n                                Practice as much as you want in any of the lessons, and when you're ready, take any quizzes that your teacher\r\n                                has created for you. It's recommended you first explore <a href=\"www.yin.rit.edu\">Yin</a> to become familiar with\r\n                                how the activities work, and then come here to practice words your teacher has specifically added based on what you're \r\n                                learning in class. </p>\r\n                        </div>\r\n                        <div id=\"teachers\">\r\n                            <h3>TEACHERS</h3>\r\n                            <img src={teacher}/>\r\n                            <p>Want to use Yin in your classs? With Yin Classroom, you can create lessons based on word lists you're teaching, add your\r\n                                own audio recordings, and create quizzes to test your students' comprehension. Please <a href=\"mailto:yinwebapp@gmail.com\">email us </a>\r\n                                to sign up as a teacher or hear more about what Yin Classroom can offer your students!\r\n                            </p>\r\n                        </div>\r\n                   </section>\r\n                        \r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport * as d3 from 'd3'\r\n\r\nclass PitchChart extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.drawPitchChart = this.drawPitchChart.bind(this);\r\n        this.drawPitchCurve = this.drawPitchCurve.bind(this);\r\n    }\r\n    \r\n    drawPitchChart(divID, width, height) {\r\n        d3.select(`#${divID}`)\r\n            .append('svg')\r\n            .attr('width', width)\r\n            .attr('height', height)\r\n            .style('background', '#eeeeee')\r\n            .style('border','3px solid #9A2D04');\r\n        var y = 2;\r\n        var i;\r\n        for (i = 0; i < 5; i++) {\r\n            d3.select(`#${divID} svg`)\r\n                .append('line')\r\n                .attr('x1', 0)\r\n                .attr('y1', y)\r\n                .attr('x2', width)\r\n                .attr('y2', y)\r\n                .style('stroke', '#babbbc')\r\n                .style('stroke-width', '3px');\r\n            if (i === 3) {\r\n                y -= 4;\r\n            }\r\n            y += (height / 4);\r\n        }\r\n    }\r\n    \r\n    drawPitchCurve(dataset, width, height, {baseline=(height/2), standardDeviation=0, color=\"red\", chartID=\"__visualization\"} = {}) {\r\n        let datarecord = [];\r\n        const parsedData = d3.tsvParse(dataset);\r\n        parsedData.map((__data) => {\r\n            // let zScore = stats.calcZScore(baseline,data.frequency,standardDeviation);    \r\n            // if(isNaN(zScore)){\r\n            // \tzScore = 0;\r\n            // }\r\n            let point = {time: __data.time, frequency: __data.frequency};\r\n            datarecord.push(point);\r\n            // var zScore = 0;\r\n            var x = __data.time * (width / 2);\r\n            var y = height - ((height/2) + ((__data.frequency - (height/2))));\r\n            d3.select(`#${chartID} svg`)\r\n                .append(\"circle\")\r\n                .attr(\"cx\", x)\r\n                .attr(\"cy\", y) \r\n                .attr(\"r\", 5)\r\n                .classed(\"userPitch\",true)\r\n                .style(\"fill\",color);\r\n            }\r\n        );\r\n        var requestPayload = {\r\n                record: datarecord\r\n            }\r\n       \r\n    };\r\n\r\n    componentDidMount(){\r\n        this.drawPitchChart('__visualization', 1100, 500);\r\n        this.props.dataset.map( (curve) => {\r\n            this.drawPitchCurve(curve[0], 1100, 500, {color:curve[1]});\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log('PitchChartUpdate');\r\n        d3.selectAll(\"svg\").remove();\r\n        this.drawPitchChart('__visualization', 1100, 500);\r\n        this.props.dataset.map( (curve) => {\r\n            this.drawPitchCurve(curve[0], 1100, 500, {color:curve[1]});\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <div id=\"__visualization\"> \r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PitchChart;","import React, { Component } from 'react';\r\n\r\nclass AudioPlayer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <audio controls > \r\n                <source src={this.props.audioFile} />\r\n                The audio cannot play.\r\n            </audio>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AudioPlayer;","import React, { Component } from 'react'\r\nimport Recorder from './Recorder';\r\nimport PitchChart from './PitchChart';\r\nimport AudioPlayer from './AudioPlayer';\r\n\r\nclass Mimicking extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            record: [],\r\n            userDataset: '',\r\n            currentStimuli: 0,\r\n            allowAdvance: false\r\n        }\r\n        this.passDataToState = this.passDataToState.bind(this);\r\n        this.nextWord = this.nextWord.bind(this);\r\n    }\r\n\r\n    uploadRecording(dataset, username){\r\n        fetch('http://localhost:8000/recordings/add/', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({username, dataset})\r\n        }).then( (res) => {\r\n            console.log(`${res.statusText}`)\r\n        });\r\n    }\r\n\r\n    passDataToState(dataset){\r\n        this.setState({\r\n            userDataset: dataset,\r\n            allowAdvance: true\r\n        });\r\n        if(this.props.lesson.is_quiz){\r\n            this.uploadRecording(dataset, this.props.username);\r\n        }\r\n    }\r\n\r\n    nextWord(){\r\n        if(this.state.allowAdvance){\r\n            this.setState({\r\n                currentStimuli: this.state.currentStimuli + 1,\r\n                userDataset: '',\r\n                allowAdvance: false\r\n            })\r\n        } else {\r\n            console.log('Please complete the recording first!');\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {this.props.lesson.words[this.state.currentStimuli] ?\r\n                    <>\r\n                        <AudioPlayer audioFile={`http://localhost:8000/${this.props.lesson.words[this.state.currentStimuli].audioFile}`} />\r\n                        <p>{this.props.lesson.words[this.state.currentStimuli].character}</p>\r\n                        <PitchChart dataset={[[String(this.props.lesson.words[this.state.currentStimuli].native_recording.data), 'blue'],[String(this.state.userDataset), 'red']]} />\r\n                        <Recorder label=\"Record\" outputFunction={this.passDataToState} />\r\n                        <button onClick={this.nextWord}>Next {this.props.lesson.words.length - 1 === this.state.currentStimuli ?\r\n                            \"Section\"\r\n                            :\r\n                            \"Word\"\r\n                        }</button>\r\n                    </>\r\n                    :\r\n                    <p>Lesson complete!</p>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Mimicking;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../css/login.css';\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            fusername: '',\r\n            fpassword: '',\r\n            error:\"\"\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleForm = this.handleForm.bind(this);\r\n    }\r\n\r\n    handleChange(event, target) {\r\n        this.setState({[target]: event.target.value});\r\n    }\r\n\r\n    handleForm(event, username, password){\r\n        event.preventDefault();\r\n        if(username !== \"\" && password !==\"\"){\r\n            this.props.submitForm(event, username, password);\r\n            this.setState( {fusername: '', fpassword: ''});\r\n        }else{\r\n            this.setState({'error':'Please fill out all fields.'});\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <form id=\"loginform\"  onSubmit={e => this.handleForm(e, this.state.fusername, this.state.fpassword )}>\r\n                    <h3>Login</h3>\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input id=\"username\" name=\"username\" placeholder=\"username\" type=\"text\" value={this.state.value} onChange={e => this.handleChange(e,'fusername')} />\r\n                    <label htmlFor =\"password\">Password:</label>\r\n                    <input id=\"password\" name=\"password\" placeholder=\"password\" type=\"password\" value={this.state.value} onChange={e => this.handleChange(e,'fpassword')}/>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                    <p>{this.state.error}</p>\r\n                </form>\r\n                <Link to=\"/SignUp\">Don't have an account? Sign up.</Link>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nclass LessonDirectoryCard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            activityOpen: false\r\n        }\r\n        this.toggleActivityList = this.toggleActivityList.bind(this);\r\n    }\r\n\r\n    toggleActivityList(){\r\n        this.setState({activityOpen: !this.state.activityOpen});\r\n        console.log(\"anything\")\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"lessonCard\">\r\n                {this.props.is_quiz ?\r\n                    <Link to={`${this.props.link}quiz`} style={{ textDecoration: 'none' }}>\r\n                        <div className=\"meta quiz\" onClick={this.toggleActivityList} >\r\n                            <h2><span id=\"no-underline\">Quiz: {this.props.LessonName}</span></h2>\r\n                            <p>{this.props.LessonDesc}</p>\r\n                        </div>\r\n                    </Link>\r\n                :\r\n                    <>\r\n                        <div className=\"meta\" onClick={this.toggleActivityList} >\r\n                            <h2>{this.props.is_quiz ? 'Quiz: ' : 'Lesson: '}{this.props.LessonName}</h2>\r\n                            <p>{this.props.LessonDesc}</p>\r\n                        </div>\r\n                        <div className = {`sub activityListContainer ${this.state.activityOpen ? '' : 'hide'} `}>\r\n                            <h2>Activities</h2>\r\n                            <ul className=\"activityList\">\r\n                                <li><Link to={`${this.props.link}1`}>1<br /></Link><span>Distinguishing</span></li>\r\n                                <li><Link to={`${this.props.link}2`}>2<br /></Link><span>Identifying</span></li>\r\n                                <li><Link to={`${this.props.link}3`}>3<br /></Link><span>Mimicking</span></li>\r\n                                <li><Link to={`${this.props.link}4`}>4<br /></Link><span>Producing</span></li>\r\n                            </ul>\r\n                        </div>\r\n                    </>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LessonDirectoryCard;","import React, { Component } from 'react';\r\nimport LessonDirectoryCard from '../components/LessonDirectoryCard';\r\n// import {\r\n//     BrowserRouter as Router,\r\n//     Switch,\r\n//     Route,\r\n//     Link\r\n//   } from \"react-router-dom\";\r\n// import Hexagon from '../components/Hexagon';\r\n\r\nclass LessonDirectory extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            allLessons: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        fetch('http://localhost:8000/lessons/all')\r\n            .then( (response) => response.json()\r\n                .then( (result) => {\r\n                    this.setState({allLessons: result});\r\n                }));\r\n        // console.log(`State: ${this.state.allLessons}`);\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ul>\r\n                    {this.state.allLessons.map( (lesson) => {\r\n                        return <LessonDirectoryCard LessonName={lesson.name} LessonDesc=\"Description of the Lesson\" is_quiz={lesson.is_quiz} link={`/lessons/${lesson.name}/`} key={`${lesson._id}`} />\r\n                    })}\r\n                </ul>\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LessonDirectory;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LessonShow extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            lesson: []\r\n        }\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.getWords = this.getWords.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        fetch(`http://localhost:8000/lessons/${this.props.match.params.name}`)\r\n            .then( (response) => response.json()\r\n                .then( (result) => {\r\n                    this.setState({lesson: result});                    }\r\n                )\r\n            );\r\n    }\r\n\r\n    getWords(words){\r\n        if (words === undefined || words === 0){\r\n            return (<p>This lesson has no words yet.</p>);\r\n        }else{\r\n            const mapped = words.map((word) => <li>word</li>);\r\n            return mapped;\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className =\"lesson show\">\r\n                <Link to={`/teacherInterface/lessons/${this.state.lesson.name}/edit/`} key={this.state.lesson.name} className=\"teacherEditLink\">Edit Lesson</Link>\r\n                <h2>{this.state.lesson.name}</h2>\r\n                <h3>Description:</h3>\r\n                <p>{this.state.lesson.description}</p>\r\n                <h3>Words:</h3>\r\n                <ul>{this.getWords(this.state.lesson.words)}    </ul>\r\n                {this.state.lesson.is_quiz ? \r\n                    <p id=\"is_quiz\">This lesson is a quiz.</p>\r\n                :\r\n                    <p>This is a lesson, not a quiz.</p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LessonShow;","import React, {Component} from 'react';\r\nimport One from '../assets/images/1_graph.svg';\r\nimport Two from '../assets/images/2_graph.svg';\r\nimport Three from '../assets/images/3_graph.svg';\r\nimport Four from '../assets/images/4_graph.svg';\r\n\r\n\r\nclass Answer extends Component{\r\n\r\n    chooseImage(){\r\n        switch(this.props.number){\r\n            case '1':\r\n                // return(<img src={require('../assets/images/1_graph.svg')} alt=\"tone 1\" title=\"1\" />);\r\n                return One;\r\n            case '2':\r\n                return Two;\r\n            case '3':\r\n                return Three;\r\n            case '4':\r\n                return Four;\r\n            default:\r\n                return('Something went wrong');\r\n        }\r\n    }\r\n\r\n    // chooseImage(){\r\n    //     var url =\"\";\r\n    //     switch(this.props.number){\r\n    //         case '1':\r\n    //             url=\"\"\r\n    //     }\r\n    // }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            {this.props.number && \r\n                <div id={this.props.number} onClick={e => this.props.collectResponse(e)} className=\"response\" style={{backgroundImage: `url(${this.chooseImage()})`}}>\r\n                    <span className =\"background-image\" role=\"img\" aria-label={this.props.number}></span>\r\n                    {/* {this.chooseImage()} */}\r\n                    {/* <p className=\"answer-text\">{this.props.number[0]}</p> */}\r\n                </div>\r\n                // :\r\n                // <p>Something went wrong</p>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Answer;","import React, { Component } from 'react';\r\n\r\n\r\nclass FeedbackBox extends Component{\r\nrender(){\r\n    return(\r\n        <div id =\"feedback-box\" className={`feedbackBox ${this.props.status}`}>\r\n            {this.props.status === \"correct\" ?\r\n                <p>Correct!</p>\r\n            :\r\n                <p>Incorrect.</p>\r\n            \r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default FeedbackBox;","import React, {Component} from 'react';\r\nimport Answer from './Answer';\r\nimport FeedbackBox from './FeedbackBox';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass ChoiceQuiz extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentStimulus: 0,\r\n            options:[], \r\n            active:\"\",\r\n            submitted: false,\r\n            answers:[],\r\n            score:0,\r\n            status:\"\",\r\n            error:\"\"\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.collectResponse = this.collectResponse.bind(this);\r\n        this.nextQuestion = this.nextQuestion.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n        // this.componentDidMount  = this.componentDidMount.bind(this);\r\n        this.chooseTones  = this.chooseTones.bind(this);\r\n        this.randomize = this.randomize.bind(this);\r\n        this.displayAnswers = this.displayAnswers.bind(this);\r\n        this.reportScore = this.reportScore.bind(this);\r\n    }\r\n\r\n\r\n\r\n    // static getStateDerivedFromProps(props, state){\r\n    //     return {stimuli: props.stimuli};\r\n    // }\r\n    reset(){\r\n        document.getElementById(\"nextQuestion\").classList.add(\"hide\");\r\n        document.getElementById(\"submitAnswer\").classList.remove(\"hide\");\r\n        document.getElementById(\"feedback-box\").style.visibility=\"hidden\";\r\n\r\n\r\n        var responses = document.getElementsByClassName(\"response\");\r\n        for (var x=0; x<responses.length; x++){\r\n            responses[x].classList.remove(\"active\");\r\n            responses[x].classList.remove(\"correct\");\r\n            responses[x].classList.remove(\"incorrect\");\r\n        }\r\n        this.setState({'submitted':false});\r\n        this.setState({'options':[]});\r\n        this.setState({'active':\"\"});\r\n    }\r\n\r\n\r\n    handleClick() {\r\n        this.setState({'currentStimulus': this.state.currentStimulus + 1});\r\n        this.reset();\r\n    }\r\n\r\n    handleSubmit(event){\r\n        if(this.state.active !==\"\"){\r\n            this.setState({'submitted':true});\r\n            var responses = document.getElementsByClassName(\"response\");\r\n            for (var x=0; x<responses.length; x++){\r\n                responses[x].classList.remove(\"active\");\r\n            }\r\n    \r\n            if(this.state.active===JSON.stringify(this.props.stimuli[this.state.currentStimulus].correctTone)){\r\n                document.getElementById(this.state.active).classList.add('correct');\r\n                this.setState({'score':this.state.score+1});\r\n                this.setState({'status':\"correct\"});\r\n            } else{\r\n                document.getElementById(this.state.active).classList.add('incorrect');\r\n                this.setState({'status':\"incorrect\"});\r\n            }\r\n    \r\n            document.getElementById(\"nextQuestion\").classList.remove(\"hide\");\r\n            document.getElementById(\"submitAnswer\").classList.add(\"hide\");\r\n            document.getElementById(\"feedback-box\").style.visibility=\"visible\";\r\n            this.setState({'error':\"\"});\r\n        }else{\r\n            this.setState({'error':\"Please select an option.\"});\r\n        }\r\n        \r\n    }\r\n\r\n    collectResponse(event){\r\n        if(this.state.submitted===false){\r\n            const questionLabel = `question${this.state.currentStimulus}`;\r\n            this.setState({'answers':[questionLabel, event.target.id ]});\r\n            this.setState({'active': event.target.id});\r\n            var responses = document.getElementsByClassName(\"response\");\r\n            for (var x=0; x<responses.length; x++){\r\n                responses[x].classList.remove(\"active\");\r\n            }\r\n            event.target.classList.add(\"active\");\r\n        }\r\n    }\r\n\r\n    randomize(a){\r\n        var j, x, i;\r\n        for (i = a.length - 1; i > 0; i--) {\r\n            j = Math.floor(Math.random() * (i + 1));\r\n            x = a[i];\r\n            a[i] = a[j];\r\n            a[j] = x;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    chooseTones(correct){\r\n\r\n        var optionArr =[];\r\n        var randomArr = [1,2,3,4];\r\n        //to pair words with tones under their graphs, uncomment word-related code \r\n        // var word = [];\r\n        \r\n        //Two choice quiz needs randomized \r\n        if(this.props.choices==='2'){\r\n            //randomize the alternate tones \r\n            randomArr = this.randomize(randomArr);\r\n        \r\n            for (var i=0; i<randomArr.length; i++){\r\n                if (randomArr[i] === correct){\r\n                    // word.push(randomArr[i]);\r\n                    // word.push(randomArr[i].charAt(randomArr[i].length-1));\r\n                    optionArr.push(randomArr[i]);\r\n                    randomArr.splice(i, 1); \r\n                    // word = [];\r\n                }\r\n            }\r\n            optionArr.push(randomArr[0]);\r\n\r\n            //Push the first entry in the randomized array, whatever it is\r\n            //this assumes the randomized array only holds incorrect options\r\n            // word.push(randomArr[0]);\r\n            // word.push(randomArr[0].charAt(randomArr[0].length-1));\r\n            // optionArr.push(word);\r\n            // word = [];\r\n\r\n            // //Push the correct answer to the array\r\n            // word.push(this.props.stimuli[this.state.currentStimulus].word);\r\n            // word.push(JSON.stringify(this.props.stimuli[this.state.currentStimulus].correctTone));\r\n            // optionArr.push(word);\r\n            // word = [];\r\n\r\n            // //randomize the two options\r\n            // optionArr = this.randomize(optionArr);\r\n\r\n            // if(stimuli[this.state.currentStimulus]){\r\n            //     word.push(stimuli[this.state.currentStimulus].word);\r\n            //     optionArr.push(word);\r\n            //     word=[];\r\n            //     for (var i=0; i<2; i++){\r\n            //         word.push(stimuli[this.state.currentStimulus].alternateTones[i]);\r\n            //         optionArr.push(word);\r\n            //         word=[];\r\n            //     }\r\n            //     // this.setState({'options': optionArr});\r\n            //     // console.log('in random' + stimuli[this.state.currentStimulus].word);\r\n\r\n            // }``\r\n        } else {\r\n            optionArr = randomArr;\r\n        }\r\n        \r\n        if(this.state.options === undefined || this.state.options.length<1){\r\n            this.setState({'options': optionArr});\r\n        }\r\n    }\r\n\r\n    displayAnswers(correct){\r\n        this.chooseTones(correct);\r\n        const answers = this.state.options.map( (opt) =>\r\n            <Answer number = {JSON.stringify(opt)} key ={opt} collectResponse={this.collectResponse} />\r\n        );\r\n        return (<>{answers}</>);\r\n    }\r\n\r\n    // if you need to get it from the end of the pinyin\r\n    // getNumber(word){\r\n    //     var number = word.charAt(word.length-1);\r\n    //     return number;\r\n    // }\r\n \r\n    reportScore(){\r\n        this.props.reportScore(this.state.score, this.props.stimuli.length, this.props.choices);\r\n    }\r\n    \r\n\r\n    nextQuestion(){\r\n        this.refs.audio.pause();\r\n        this.refs.audio.load();\r\n        this.handleClick();\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            \r\n                \r\n                {this.props.stimuli && \r\n                    this.props.stimuli.length > this.state.currentStimulus ? \r\n                    <>\r\n                    <div className=\"activity-wrap two-choice\">\r\n                        <div className=\"stimuli\">\r\n                            <audio controls id = \"audio-clip\" ref=\"audio\" >\r\n                                <source id=\"audioSource\" src={`http://localhost:8000/${this.props.stimuli[this.state.currentStimulus].audioFile}`} type=\"audio/mpeg\" />\r\n                                Audio not working!\r\n                            </audio>\r\n                            <p>word:  {this.props.stimuli[this.state.currentStimulus].character}</p>\r\n                        \r\n                        </div>\r\n                        <div className = \"answers\">\r\n                            {this.displayAnswers(this.props.stimuli[this.state.currentStimulus].correctTone)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"feedbackContainer\">\r\n                        <button onClick={this.handleSubmit} id=\"submitAnswer\">Submit</button>\r\n                        <button onClick={this.nextQuestion} className=\"hide\" id=\"nextQuestion\">Next</button>\r\n                        <FeedbackBox status = {this.state.status} />\r\n                        <p id=\"error\">{this.state.error}</p>\r\n                    </div>\r\n                    </>\r\n                    \r\n                    :\r\n                        <>\r\n                        {this.props.quiz===\"true\" ?\r\n                            <>\r\n                            <p>You've completed this section of the quiz.</p>\r\n                            <button onClick={this.reportScore}>Continue</button>\r\n                            </>\r\n                        :\r\n                        <div id=\"score\">\r\n                            <h2>Activity complete!</h2>\r\n                            <p>Your score is: {this.state.score} out of {this.props.stimuli.length}</p>\r\n                            <Link to=\"../\">Return to Lessons & Quizzes</Link>\r\n                        </div>\r\n                        }\r\n                        </>\r\n                        \r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ChoiceQuiz;","import React, { Component } from 'react'\r\nimport Recorder from './Recorder';\r\nimport PitchChart from './PitchChart';\r\nimport AudioPlayer from './AudioPlayer';\r\n\r\nclass Mimicking extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            record: [],\r\n            userDataset: '',\r\n            currentStimuli: 0,\r\n            allowAdvance: false\r\n        }\r\n        this.passDataToState = this.passDataToState.bind(this);\r\n        this.nextWord = this.nextWord.bind(this);\r\n    }\r\n\r\n    uploadRecording(dataset, username){\r\n        fetch('http://localhost:8000/recordings/add/', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({username, dataset})\r\n        }).then( (res) => {\r\n            console.log(`${res.statusText}`)\r\n        });\r\n    }\r\n\r\n    passDataToState(dataset){\r\n        this.setState({\r\n            userDataset: dataset,\r\n            allowAdvance: true\r\n        });\r\n        if(this.props.lesson.is_quiz){\r\n            this.uploadRecording(dataset, this.props.username);\r\n        }\r\n    }\r\n\r\n    nextWord(){\r\n        if(this.state.allowAdvance){\r\n            this.setState({\r\n                currentStimuli: this.state.currentStimuli + 1,\r\n                userDataset: '',\r\n                allowAdvance: false\r\n            })\r\n        } else {\r\n            console.log('Please complete the recording first!');\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {this.props.lesson.words[this.state.currentStimuli] ?\r\n                    <>\r\n                        {this.state.allowAdvance ?\r\n                            <AudioPlayer audioFile={`http://localhost:8000/${this.props.lesson.words[this.state.currentStimuli].audioFile}`} />\r\n                        :\r\n                            <></>\r\n                        }\r\n                        <p>{this.props.lesson.words[this.state.currentStimuli].character}</p>\r\n                        <PitchChart \r\n                            dataset={this.state.allowAdvance ? [\r\n                                [String(this.props.lesson.words[this.state.currentStimuli].native_recording.data), 'blue'],\r\n                                [String(this.state.userDataset), 'red']\r\n                            ]\r\n                            :\r\n                            [\r\n                                [String(this.state.userDataset), 'red']\r\n                            ]\r\n                        }\r\n                        />\r\n                        <Recorder label=\"Record\" outputFunction={this.passDataToState} />\r\n                        <button onClick={this.nextWord}>Next {this.props.lesson.words.length - 1 === this.state.currentStimuli ?\r\n                            \"Section\"\r\n                            :\r\n                            \"Word\"\r\n                        }</button>\r\n                    </>\r\n                    :\r\n                    <p>Lesson complete!</p>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Mimicking;","import React, {Component} from 'react';\r\nimport ChoiceQuiz from './ChoiceQuiz';\r\nimport Mimicking from './Mimicking';\r\nimport Production from './Production';\r\n\r\nclass Quiz extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        console.log(props);\r\n        this.state = {\r\n            activity1:{\r\n                score: null,\r\n                maxpoints: new Number()\r\n            },\r\n            activity2:{\r\n                score: null,\r\n                maxpoints: new Number()\r\n            },\r\n            activity3:{\r\n                recordings:[]\r\n            },\r\n            activity4:{\r\n                recordings:[]\r\n            },\r\n            current: null,\r\n            // current:0,\r\n            prev: false,\r\n            sum_score: 0,\r\n            sum_total_score: 0\r\n        }\r\n        this.captureScore = this.captureScore.bind(this);\r\n        this.advance = this.advance.bind(this);\r\n        this.recordScore = this.recordScore.bind(this);\r\n        this.initialize= this.initialize.bind(this);\r\n    }\r\n\r\n    initialize(){\r\n            if(this.props.activities){\r\n                if(this.state.current===null){\r\n                    this.setState({current:this.props.activities[0]});\r\n                }\r\n            }\r\n\r\n            fetch(`http://localhost:8000/quizScores/${this.props.username}/${this.props.lesson}`)\r\n                .then( (response) => response.json()\r\n                    .then( (result) => {\r\n                        console.log(\"result\" + JSON.stringify(result));\r\n                        if(result.length >0){\r\n                            this.setState({prev: true});\r\n                        }\r\n                    }\r\n                )\r\n            )\r\n        \r\n        \r\n    }\r\n\r\n    async recordScore(){\r\n        var sum_score = null;\r\n        var sum_total_score = null;\r\n        const user_token = localStorage.token;\r\n        if(this.includes(1) && this.includes(2)){\r\n            sum_score = this.state.activity1.score + this.state.activity2.score;\r\n            sum_total_score = this.state.activity1.max_score + this.state.activity2.max_score;\r\n        } else if(this.includes(1)){\r\n            sum_score = this.state.activity1.score;\r\n            sum_total_score = this.state.activity1.max_score;\r\n        } else if (this.includes(2)){\r\n            sum_score = this.state.activity2.score;\r\n            sum_total_score = this.state.activity2.max_score;\r\n\r\n        }\r\n        this.setState({sum_score:sum_score});\r\n        this.setState({sum_total_score:sum_total_score});\r\n        var array1 = this.state.activity3.recordings;\r\n        var allRecordings = array1.concat(this.state.activity4.recordings);\r\n        this.props.sendScore(sum_score, sum_total_score, allRecordings);        \r\n    }\r\n\r\n\r\n\r\n    advance(num){\r\n\r\n        for (var i=num; i<5; i++){\r\n            var next=i+1;\r\n            if (this.includes(next)){\r\n                this.setState({\"current\":next});\r\n                break;\r\n            }else if (next===5){\r\n                this.setState({\"current\":5});\r\n                this.recordScore();\r\n            }\r\n        }\r\n        \r\n  \r\n        \r\n\r\n    }\r\n\r\n    captureScore(score, max_score, choices){\r\n        const activity = choices===\"2\" ? \"activity1\" : \"activity2\";\r\n        const activitynum = choices===\"2\" ? 1 : 2;\r\n        this.setState({[activity]:{\r\n            \"score\": score, \r\n            \"max_score\": max_score\r\n        }}, () => {\r\n            this.advance(activitynum);\r\n        });\r\n\r\n    }\r\n\r\n    includes(num){\r\n        for(var i=0; i<this.props.activities.length; i++){\r\n            if(this.props.activities[i]===num){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    toPercent(num1,num2){\r\n        var percent= num1/num2 *100;\r\n        return percent;\r\n    }\r\n    //to-do\r\n    //need to lift state up from quizzes to here; when a quiz is finished, score needs to come up, and current needs to be updated to the next activity in this.props.activities (might not be the next sequentially)\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {this.props.lesson && this.state.prev===false ? this.initialize() : \"\"}\r\n                {this.state.prev===true ? \r\n                    <>\r\n                        <h3>You've already taken this quiz.</h3>\r\n                        <p>You cannot take a quiz you've already taken. For more practice, explore the lessons. For re-takes, please speak with your teacher.</p>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    {this.props.activities && this.includes(1) && this.state.current===1 ?\r\n                        <ChoiceQuiz stimuli={this.props.stimuli} choices=\"2\" reportScore={this.captureScore} quiz=\"true\"/>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                    {this.props.activities && this.includes(2)  && this.state.current===2 ?\r\n                        <ChoiceQuiz stimuli={this.props.stimuli} choices=\"4\" reportScore={this.captureScore} quiz=\"true\"/>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                    {this.props.activities && this.includes(3)  && this.state.current===3 ?\r\n                        <Mimicking lesson={this.props.fullLesson} username={this.props.username} />\r\n                        :\r\n                        \"\"\r\n                    }\r\n                    {this.props.activities && this.includes(4)  && this.state.current===4 ?\r\n                        <Production lesson={this.props.fullLesson} username={this.props.username} />\r\n                        :\r\n                        \"\"\r\n                    }\r\n                    {this.props.activities  && this.state.current===5 ?\r\n                        <div id=\"score\">\r\n                        <h3>You've completed this quiz!</h3>\r\n                        <p>Your combined score on the multiple choice sections is {this.state.sum_score} out of {this.state.sum_total_score} ({this.toPercent(this.state.sum_score, this.state.sum_total_score)}%). <br />Your teacher will grade your recordings.</p>\r\n                        </div>\r\n                        :\r\n                        \"\"\r\n                    }\r\n\r\n\r\n                    </>\r\n                }\r\n                \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Quiz;","import React, {Component} from 'react';\r\nimport ChoiceQuiz from '../components/ChoiceQuiz';\r\nimport Baseline from '../components/Baseline';\r\nimport Quiz from '../components/Quiz';\r\nimport Mimicking from '../components/Mimicking';\r\nimport Production from '../components/Production';\r\nimport {\r\n    Route,\r\n  } from \"react-router-dom\";\r\n\r\n\r\nclass Activity extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            lesson: {}, \r\n            audioRes: [],\r\n            audios:[],\r\n            audioParse: [],\r\n            userScores:[]\r\n        }\r\n        this.sendScore = this.sendScore.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        fetch(`http://localhost:8000/lessons/${this.props.match.params.name}`)\r\n            .then( (response) => response.json()\r\n                .then( (result) => {\r\n                    this.setState({lesson: result});\r\n                    }\r\n                )\r\n            );\r\n\r\n        // fetch(`http://localhost:8000/quizScores/${this.props.user}/${this.props.match.params.name}`)\r\n        //     .then( (response) => response.json()\r\n        //         .then( (result) => {\r\n        //             this.setState({userScores: result});\r\n        //             }\r\n        //         )\r\n        //     );\r\n\r\n        fetch(`http://localhost:8000/lessons/${this.props.match.params.name}/words`)\r\n            .then( (response) => response.json()\r\n                .then( (result) => {\r\n                    this.setState({audioRes: result});\r\n                    // var allAudios = [];\r\n                    // var i = 0;\r\n                    // this.state.audioRes.forEach(function(audio){\r\n                    //     allAudios.push([audio._id, \"~\",audio.audioFile,\"~\", audio.word,\"~\", audio.alternateTones,\"~\", audio.correctTone,\"~\", audio.lessonName])\r\n                    //     // var oneAudio = {\r\n                    //     //     id: audio._id,\r\n                    //     //     audioFile: audio.audioFile,\r\n                    //     //     word: audio.word,\r\n                    //     //     alternateTones: audio.alternateTones,\r\n                    //     //     correctTone: audio.correctTone,\r\n                    //     //     lessonName: audio.lessonName\r\n\r\n                    //     // }\r\n                    //     // console.log(oneAudio);\r\n                    //     // allAudios.push(oneAudio);\r\n                    // })\r\n                    // console.log(allAudios);\r\n                    // this.setState({audios: allAudios})\r\n\r\n                    // var tempRes = this.state.audioRes; \r\n                    // for(var i=0, temp; i <tempRes.length; i++){\r\n                    //     temp = tempRes[i];\r\n\r\n                    // }\r\n                    // var parse = JSON.parse(this.state.audioRes);\r\n                    // this.setState({audioParse: parse});\r\n                }\r\n                )\r\n            );\r\n    }\r\n\r\n    sendScore(score, sum_total, recordings){\r\n        fetch('http://localhost:8000/quizScores/add/', {\r\n            method: 'POST',\r\n            headers: {\"Content-Type\":\"application/json\"},\r\n            \r\n            body:JSON.stringify({\r\n                \"lesson\": this.props.match.params.name,\r\n                \"user\": this.props.user,\r\n                \"score\": score,\r\n                \"maxScore\": sum_total,\r\n                \"recordings\": recordings || ''\r\n            })\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div /*className={`activity ${this.props.activityOpen ? 'open' : 'min'}`} onClick={this.props.toggleLessonActivity}*/>\r\n                <h3>Lesson: {this.props.match.params.name}</h3>\r\n                <h2>Activity {this.props.match.params.activityNumber}</h2>\r\n               \r\n                <Route path={`/lessons/${this.props.match.params.name}/1`}>\r\n                    <ChoiceQuiz stimuli={this.state.audioRes} choices=\"2\" />\r\n                    {/* <Baseline thing={this.state.audioRes} /> */}\r\n \r\n                </Route>\r\n                <Route path={`/lessons/${this.props.match.params.name}/2`}>\r\n                    <ChoiceQuiz stimuli={this.state.audioRes} choices=\"4\"/>\r\n                </Route>\r\n                <Route path={`/lessons/${this.props.match.params.name}/3`}>\r\n                    {Boolean(this.props.baseline) === false ?\r\n                        <Baseline outputFunction={this.props.setBaseline} />\r\n                    :\r\n                        <Mimicking lesson={this.state.lesson} />\r\n                    }\r\n                </Route>\r\n                <Route path={`/lessons/${this.props.match.params.name}/4`}>\r\n                    {Boolean(this.props.baseline) === false ?\r\n                        <Baseline outputFunction={this.props.setBaseline} />\r\n                    :\r\n                        <Production lesson={this.state.lesson} />\r\n                    }\r\n                </Route>\r\n                <Route path={`/lessons/${this.props.match.params.name}/quiz`}>\r\n                    <Quiz activities={this.state.lesson.quizSections} stimuli={this.state.audioRes} lesson = {this.state.lesson.name} fullLesson={this.state.lesson} username={this.props.user} sendScore={this.sendScore}/>\r\n                </Route>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Activity;","import React, { Component } from 'react';\r\n\r\nclass AudioUpload extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            word: '',\r\n            alternateTones: [],\r\n            correct: '',\r\n            lessonName: '' \r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.createAlternateToneArray = this.createAlternateToneArray.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    createAlternateToneArray(){\r\n        const altTone1 = document.getElementById(\"altTone1\").value; \r\n        const altTone2 = document.getElementById(\"altTone2\").value; \r\n        const altTone3 = document.getElementById(\"altTone3\").value; \r\n        this.setState({\r\n            alternateTones: [altTone1, altTone2, altTone3]\r\n        })\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        let formData = new FormData();\r\n        formData.append('word', this.state.word);\r\n        formData.append('alternateTones', this.state.alternateTones);\r\n        formData.append('correct', this.state.correct);\r\n        formData.append('lessonName', this.state.lessonName);\r\n        formData.append('audioFile', document.getElementById(\"audioFileInput\").files[0])\r\n        fetch(\"http://localhost:8000/uploadAudio/\", {\r\n            method: \"POST\",\r\n            body: formData,\r\n        }).then((response) => {\r\n            console.log(response)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <form onSubmit={this.handleSubmit} className =\"audioForm\">\r\n                    <label for=\"audioFileInput\">\r\n                       Audio File:\r\n                    </label>\r\n                    <input \r\n                            id=\"audioFileInput\"\r\n                            type=\"file\" \r\n                            name=\"audioFile\"\r\n                        />\r\n                    <label for =\"word\">\r\n                        Word:\r\n                    </label>\r\n                    <input \r\n                            id=\"word\"\r\n                            type=\"text\" \r\n                            name=\"word\"\r\n                            value={this.state.word}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                    <label for=\"tone\">\r\n                        Correct Tone:\r\n                    </label>\r\n                    <input \r\n                            id=\"tone\"\r\n                            type=\"text\"\r\n                            name=\"correct\"\r\n                            value={this.state.correct}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                    <label for=\"altTone1\">\r\n                        Alternate Tone 1:\r\n                    </label>\r\n                        <input\r\n                            id=\"altTone1\"\r\n                            type=\"text\"\r\n                            name=\"altTone1\"\r\n                            value={this.state.alternateTones[0]}\r\n                            onChange={this.createAlternateToneArray}\r\n                        />\r\n                    <label for=\"altTone2\">\r\n                        Alternate Tone 2:\r\n                    </label>\r\n                        <input\r\n                            id=\"altTone2\"\r\n                            type=\"text\"\r\n                            name=\"altTone2\"\r\n                            value={this.state.alternateTones[1]}\r\n                            onChange={this.createAlternateToneArray}\r\n                        />\r\n                    <label for=\"altTone3\">\r\n                        Alternate Tone 3:\r\n                    </label>\r\n                        <input\r\n                            id=\"altTone3\"\r\n                            type=\"text\"\r\n                            name=\"altTone3\"\r\n                            value={this.state.alternateTones[2]}\r\n                            onChange={this.createAlternateToneArray}\r\n                        />\r\n                    <label for=\"lesson\">\r\n                        Lesson Name:\r\n                    </label>\r\n                    <input\r\n                            id=\"lesson\"\r\n                            type=\"text\"\r\n                            name=\"lessonName\"\r\n                            value={this.state.lessonName}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                    <label id=\"submitButton\">\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Submit\"\r\n                        />\r\n                    </label>\r\n\r\n                </form>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AudioUpload;","import React, { Component } from \"react\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass LessonForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        // console.log(`some words! ${props.words}`)\r\n        // var startingWords;\r\n        // startingWords = props.words.map((word) => {\r\n        //     console.log(word.character);\r\n        //     return word.character;\r\n        // });\r\n        this.state = {\r\n            name: props.name || '',\r\n            description: props.description || '',\r\n            words: props.words || [],\r\n            wordKeys: [],\r\n            is_quiz: props.is_quiz || false,\r\n            quiz_sections: props.quiz_sections || [1,2,3,4],\r\n            all_words: [],\r\n            form_complete: false\r\n        }\r\n        console.log(props);\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n        this.fetchAllWords = this.fetchAllWords.bind(this);\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.matchWord = this.matchWord.bind(this);\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n        this.deleteLesson = this.deleteLesson.bind(this);\r\n        this.is_checked = this.is_checked.bind(this);\r\n        this.handleSectionChange = this.handleSectionChange.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const all_words = await this.fetchAllWords();\r\n        // const {name, description, words, is_quiz, editing} = this.props;\r\n        this.setState({all_words});\r\n        // this.setState({name, description, words, is_quiz, editing});\r\n        // this.setState({name});\r\n    }\r\n\r\n    async fetchAllWords(){\r\n        const all_words = await (await fetch('http://localhost:8000/words/all/')).json();\r\n        return all_words;\r\n    }\r\n\r\n    handleInputChange(event){\r\n        var attribute = event.target.name;\r\n        var value = event.target.value;\r\n        this.setState({[attribute]: value})\r\n    }\r\n\r\n    handleCheckboxChange(){\r\n        var prevState = this.state.is_quiz;\r\n        this.setState({is_quiz: !prevState})\r\n    }\r\n\r\n    handleSectionChange(num){\r\n        console.log(this.state.quiz_sections);\r\n        var array = this.state.quiz_sections; \r\n        var index = null;\r\n        if(this.is_checked(num)){\r\n            index = array.indexOf(num); \r\n            // delete array[index];\r\n            array.splice(index,1);\r\n        }else{\r\n            array.push(num);\r\n        }\r\n\r\n\r\n        this.setState({quiz_sections:array});\r\n        \r\n\r\n    }\r\n\r\n    handleSelectChange(event){\r\n        const options = event.target.options;\r\n        var selected = [];\r\n        var selected_keys = [];\r\n        for(let i = 0; i < options.length; i++){\r\n            if(options[i].selected){\r\n                selected.push(options[i].value);\r\n                selected_keys.push(options[i].id);\r\n            }\r\n        }\r\n        this.setState({words:selected});\r\n        this.setState({wordKeys:selected_keys});\r\n    }\r\n\r\n    deleteLesson(){\r\n        const method = 'DELETE';\r\n        const url = `http://localhost:8000/lessons/${this.props.name}/delete`;\r\n\r\n        fetch(url,{\r\n            method: method,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name\r\n            })\r\n        }).then( () => {\r\n            console.log(\"deleted\");\r\n        });\r\n\r\n    }\r\n\r\n    handleSubmit(event){\r\n        console.log(\"in handle\");\r\n        event.preventDefault();\r\n        var method = this.props.editing ? 'PUT' : 'POST';\r\n        var url = 'http://localhost:8000/lessons/add/';\r\n        if(this.props.editing && this.state.name ===this.props.name){\r\n            url = `http://localhost:8000/lessons/${this.state.name}/edit`;\r\n        } else if (this.props.editing && this.state.name !== this.props.name){\r\n            this.deleteLesson();\r\n            method = \"POST\";\r\n        }\r\n        console.log(url);\r\n        fetch(url,{\r\n            method: method,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                description: this.state.description,\r\n                words: this.state.wordKeys,\r\n                is_quiz: this.state.is_quiz,\r\n                quizSections: this.state.quiz_sections\r\n            })\r\n        }).then( () => {\r\n            console.log(\"success\");\r\n            this.setState({form_complete: true})\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.words !== this.props.words){\r\n            const newWords = this.props.words.map( (word) => {\r\n                return word.character;\r\n            })\r\n            this.setState({words:newWords});\r\n        }\r\n    }\r\n\r\n    matchWord(word){\r\n        for(var i=0; i<this.state.words.length; i++){\r\n            if (this.state.words[i]._id===word){\r\n                console.log(true);\r\n                return true;\r\n                \r\n            }else{\r\n                console.log(false);\r\n                return false;\r\n                \r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    is_checked(num){\r\n        if(this.props.quiz_sections || this.state.quiz_sections){\r\n            for (var i=0; i<this.state.quiz_sections.length; i++){\r\n                if(this.state.quiz_sections[i]===num){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {this.state.form_complete ?\r\n                    <Redirect to='/teacherInterface/' />\r\n                :\r\n                    <>\r\n                        {this.props.editing ?\r\n                         <h1>Editing {this.props.name}</h1>\r\n                        :\r\n                         <h1>New lesson</h1>}\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <label htmlFor=\"name\">\r\n                                Name:\r\n                            </label>\r\n                                <input \r\n                                    id=\"name\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    value={this.state.name}\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n                            <label htmlFor=\"description\">\r\n                                Description:\r\n                            </label>\r\n                                <input \r\n                                    id=\"description\"\r\n                                    type=\"text\"\r\n                                    name=\"description\"\r\n                                    value={this.state.description}\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n                            <label htmlFor=\"words\">\r\n                                Words\r\n                            </label>\r\n                                <select\r\n                                    id=\"words\"\r\n                                    multiple={true}\r\n                                    name=\"words\"\r\n                                    value={this.state.words}\r\n                                    onChange={this.handleSelectChange}\r\n                                    size=\"7\"\r\n                                >\r\n                                    {this.state.all_words && this.state.all_words.map( (word) => {\r\n                                        return <option  key={word._id} id={word._id} value={word.character}>{word.character}</option>\r\n                                    })}\r\n                                \r\n                                </select>\r\n                            <label htmlFor=\"is_quiz\">\r\n                                Is this lesson a quiz?:\r\n                            </label>\r\n                            <input \r\n                                    id=\"is_quiz\"\r\n                                    checked={!!this.state.is_quiz}\r\n                                    type=\"checkbox\"\r\n                                    name=\"is_quiz\"\r\n                                    value={this.state.is_quiz}\r\n                                    onChange={this.handleCheckboxChange}\r\n                            />\r\n                            {this.state.is_quiz ? \r\n                                <>\r\n                                    <h3>Which activities would you like in this quiz?</h3>\r\n                                    <label htmlFor=\"sec_one\">Activity 1: Distinguishing (2-choice quiz)</label>\r\n                                    <input \r\n                                        id=\"sec_one\"\r\n                                        checked={this.is_checked(1)}\r\n                                        type=\"checkbox\"\r\n                                        name=\"sec_one\"\r\n                                        value=\"1\"\r\n                                        onClick={() => this.handleSectionChange(1)}\r\n                                    />\r\n                                    <label htmlFor=\"sec_two\">Activity 2: Identifying (4-choice quiz)</label>\r\n                                    <input \r\n                                        id=\"sec_two\"\r\n                                        checked={this.is_checked(2)}\r\n                                        type=\"checkbox\"\r\n                                        name=\"sec_two\"\r\n                                        value=\"2\"\r\n                                        onChange={() => this.handleSectionChange(2)}\r\n                                    />\r\n                                    <label htmlFor=\"sec_three\">Activity 3: Mimicking (record with teacher example)</label>\r\n                                    <input \r\n                                        id=\"sec_three\"\r\n                                        checked={this.is_checked(3)}\r\n                                        type=\"checkbox\"\r\n                                        name=\"sec_three\"\r\n                                        value=\"3\"\r\n                                        onChange={() => this.handleSectionChange(3)}\r\n                                    />\r\n                                    <label htmlFor=\"sec_four\">Activity 4: Producing (record without teacher example)</label>\r\n                                    <input \r\n                                        id=\"sec_four\"\r\n                                        checked={this.is_checked(4)}\r\n                                        type=\"checkbox\"\r\n                                        name=\"sec_four\"\r\n                                        value=\"4\"\r\n                                        onChange={() => this.handleSectionChange(4)}\r\n                                    />\r\n\r\n                                </>\r\n                                :\r\n                                <>\r\n                                </>\r\n                            }\r\n                            <input type=\"submit\" value=\"Submit\" />\r\n                        </form>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LessonForm;","import React, { Component } from \"react\";\r\nimport LessonForm from './LessonForm';\r\n\r\nclass LessonEdit extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            lesson: {},\r\n            words: []\r\n        }\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const lesson = await (await fetch(`http://localhost:8000/lessons/${this.props.match.params.name}/`)).json();\r\n        this.setState({lesson});\r\n\r\n        const words = await(await fetch(`http://localhost:8000/lessons/${this.props.match.params.name}/words/`)).json();\r\n        this.setState({words});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            {this.state.lesson.name &&\r\n                <LessonForm name={this.state.lesson.name} \r\n                description={this.state.lesson.description} \r\n                words={this.state.words} \r\n                is_quiz={this.state.lesson.is_quiz} \r\n                editing={true}\r\n                quiz_sections={this.state.lesson.quizSections} />\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LessonEdit;","import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LessonDelete extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            deleted:false,\r\n            response: \"\"\r\n        }\r\n        this.delete = this.delete.bind(this);\r\n    }\r\n\r\n    delete(){\r\n        fetch(`http://localhost:8000/lessons/${this.props.match.params.name}/delete`, {method:\"DELETE\"})\r\n            .then( (response) => response.text()\r\n                .then( (result) => {\r\n                    console.log(\"deleted\");\r\n                    this.setState({response: result});\r\n                    this.setState({deleted:true});\r\n                    }\r\n                )\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"lesson delete\"> \r\n                {this.state.deleted ? \r\n                    <>\r\n                    <p>{this.state.response}</p>\r\n                    <Link to=\"../../\">Back to lessons</Link>\r\n                    \r\n                    </>\r\n                :\r\n                    <>\r\n                    <h3>Are you sure you want to delete {this.props.match.params.name}?</h3>\r\n                    <button onClick={this.delete}>Delete</button>\r\n                    </>\r\n                    \r\n                }\r\n                \r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default LessonDelete;\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../../css/teacherInterface.css';\r\nimport '../../css/lessons.css';\r\n\r\nclass TeacherLessonDirectory extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            lessons: []\r\n        }\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        var lessons = await (await fetch(\"http://localhost:8000/lessons/all/\")).json();\r\n        this.setState({lessons: lessons});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {this.state.lessons && \r\n                    <>\r\n                        <Link to={'/teacherInterface/lessons/add'} id=\"addLessonLink\">\r\n                            + &emsp;Add a Lesson\r\n                        </Link>\r\n                        <h1>Lessons:</h1>\r\n                        <ul>\r\n                            {this.state.lessons.map( (lesson) => {\r\n                                return <Link to={`/lessons/${lesson.name}/`} key={lesson.name} className=\"teacherCardLink\">\r\n                                    <div className=\"teacherCard lessonCard\">\r\n                                        <div className=\"meta\" onClick={this.toggleActivityList}>\r\n                                            <h2>{lesson.is_quiz ? 'Quiz: ' : 'Lesson: '}{lesson.name}</h2>\r\n                                            <p>{lesson.description}</p>\r\n                                            <Link to={`/teacherInterface/lessons/${lesson.name}/edit/`} key={lesson.name} className=\"teacherEditLink\">Edit Lesson</Link>\r\n                                            <Link to={`/teacherInterface/lessons/${lesson.name}/delete/`} key={`delete${lesson.name}`} className=\"teacherDeleteLink\">Delete Lesson</Link>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                                    \r\n                            })}\r\n                        </ul>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TeacherLessonDirectory;","import React, { Component } from 'react';\r\nimport AudioUpload from '../components/AudioUpload';\r\n// import TeacherNav from '../components/TeacherNav';\r\nimport LessonForm from '../components/lessons/LessonForm';\r\nimport LessonEdit from '../components/lessons/LessonEdit';\r\nimport LessonDelete from '../components/lessons/LessonDelete';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport TeacherLessonDirectory from '../components/lessons/TeacherLessonDirectory';\r\n\r\nclass TeacherInterface extends Component {\r\n\r\n\r\n    render(){\r\n        return(\r\n            <Switch>\r\n                <Route path=\"/teacherInterface/lessons/:name/edit/\" component={LessonEdit} />\r\n                <Route path=\"/teacherInterface/lessons/:name/delete/\" component={LessonDelete} />\r\n                <Route path=\"/teacherInterface/lessons/add/\" component={LessonForm} />\r\n                <Route path=\"/teacherInterface/lessons/\" component={TeacherLessonDirectory} />\r\n                <Route path=\"/teacherInterface/words/add\" component={AudioUpload} />\r\n                <Route path=\"/teacherInterface/\" component={TeacherLessonDirectory} />\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TeacherInterface;","import React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nclass SignUp extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            password2: '',\r\n            baseline: null,\r\n            is_teacher: false,\r\n            form_complete: false,\r\n            preventSubmit:false,\r\n            errorMessage:''\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    }\r\n\r\n\r\n    handlePasswordChange(){\r\n        // var attribute = event.target.name;\r\n        // var value = event.target.value;\r\n        if(this.state.password !== this.state.password2){\r\n            console.log(\"error\");\r\n            this.setState({\"errorMessage\": \"Your passwords do not match.\"})\r\n            this.setState({\"preventSubmit\": true});\r\n        }else if(this.state.password===this.state.password2){\r\n            console.log(\"match\");\r\n            this.setState({\"errorMessage\": \"\"})\r\n            this.setState({\"preventSubmit\": false});\r\n        }\r\n\r\n        // this.setState({[attribute]: value})\r\n    }\r\n\r\n\r\n    async handleInputChange(event){\r\n        var attribute = event.target.name;\r\n        var value = event.target.value;\r\n        this.setState({[attribute]: value}, () =>{\r\n            if (attribute === \"password\" || attribute ===\"password2\"){\r\n                this.handlePasswordChange();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    handleCheckboxChange(){\r\n        var prevState = this.state.is_teacher;\r\n        this.setState({is_teacher: !prevState})\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        if(this.state.preventSubmit === false){\r\n            const method = this.props.editing ? 'PUT' : 'POST';\r\n            fetch('http://localhost:8000/signup/',{\r\n                method: method,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password,\r\n                    baseline: this.state.baseline,\r\n                    is_teacher: this.state.is_teacher\r\n                })\r\n            }).then( async (response) => {\r\n                const message = await response.text();\r\n                if (message ===\"Username taken, please try another.\"){\r\n                    this.setState({\"errorMessage\": message})\r\n                }else{\r\n                    this.setState({form_complete: true})\r\n                }\r\n                \r\n            });\r\n        } else if(this.state.preventSubmit===true){\r\n            this.setState({\"errorMessage\": this.state.errorMessage + \"  Please correct errors before submitting.\"})\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                {this.state.form_complete ?\r\n                    <Redirect to='/' />\r\n                :\r\n                    <>\r\n                    <form id=\"signUp\" onSubmit={this.handleSubmit}>\r\n                        <h2>Sign Up</h2>\r\n                        <label htmlFor=\"username\">Username:</label>\r\n                        <input\r\n                            id=\"username\"\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={this.state.password}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <label htmlFor=\"password2\">Re-enter password:</label>\r\n                        <input\r\n                            id=\"password2\"\r\n                            type=\"password\"\r\n                            name=\"password2\"\r\n                            value={this.state.password2}\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        {/* <label htmlFor=\"is_teacher\">Check this box if you are a teacher.</label>\r\n                        <input\r\n                            id=\"is_teacher\"\r\n                            type=\"checkbox\"\r\n                            checked={!!this.state.is_teacher}\r\n                            name=\"is_teacher\"\r\n                            value={this.state.is_teacher}\r\n                            onChange={this.handleCheckboxChange}\r\n                        /> */}\r\n                        <p id=\"error\">{this.state.errorMessage}</p>\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                        <p>If you are a teacher, please <a href=\"mailto:yinwebapp@gmail.com\">contact us</a> for special permissions.</p>\r\n\r\n                    </form>\r\n                    \r\n                    </>}\r\n                \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport './css/activities.css';\r\nimport './css/LADirectoryStyle.css';\r\nimport './css/style.css';\r\nimport './css/lessons.css';\r\n// import Activity from './pages/Activity';\r\n// import Answer from './components/Answer';\r\nimport BaselineExplanation from './components/BaselineExplanation';\r\nimport Baseline from './components/Baseline';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport Home from './pages/Home';\r\nimport Mimicking from './components/Mimicking';\r\nimport Login from './components/Login';\r\n// import Hexagon from './components/Hexagon';\r\nimport LessonDirectory from './pages/LessonDirectory';\r\nimport LessonShow from './components/lessons/LessonShow';\r\nimport Activity from './pages/Activity';\r\nimport TeacherInterface from './pages/TeacherInterface';\r\nimport SignUp from './pages/SignUp';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nclass App extends React.Component{\r\n\r\n  constructor(){\r\n    super();\r\n    const hasToken = localStorage.token ? true : false;\r\n    this.state={\r\n      \"lessonOpen\":true,\r\n      isLoggedIn: hasToken,\r\n      username: '',\r\n      baseline: 0,\r\n      error:\"\"\r\n    }\r\n    this.toggleLessonActivity = this.toggleLessonActivity.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.setBaseline = this.setBaseline.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    window.addEventListener(\"beforeunload\", (ev) =>{\r\n      ev.preventDefault();\r\n      localStorage.clear();\r\n    });\r\n  }\r\n\r\n  toggleLessonActivity(){\r\n    this.setState({lessonOpen: !this.state.lessonOpen});\r\n  }\r\n\r\n  setBaseline(value){\r\n    this.setState({baseline: value});\r\n  }\r\n\r\n  submitForm(event, username, password) {\r\n        event.preventDefault();\r\n        fetch('http://localhost:8000/login/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    \"username\":username,\r\n                    \"password\":password\r\n                }\r\n            )\r\n        }).then( (response) => {\r\n            if (response.status ===401){\r\n              this.setState({error:\"Username or password is incorrect.\"});\r\n            }else{\r\n              response.text().then( (token) => {\r\n                this.setState({error:\"\"});\r\n                this.setState( {isLoggedIn: true});\r\n                localStorage.setItem('token', token);\r\n                this.setState( {username: username});\r\n              })\r\n            }\r\n          })\r\n        \r\n    }\r\n\r\n  render(){\r\n    return (\r\n      <Router>\r\n        <Header is_teacher={true} />\r\n        \r\n          {this.state.isLoggedIn ? <> \r\n              <Switch>\r\n                <Route path=\"/showLesson/\" component={Mimicking} />\r\n                <Route path=\"/baseline/\" component={Baseline} />\r\n                <Route path=\"/teacherInterface/\" component={TeacherInterface} />\r\n                <Route path=\"/lessons/:name/:activityNumber\" render={(props) => <Activity baseline={this.state.baseline} {...props} setBaseline={this.setBaseline} user={this.state.username} />} />\r\n                <Route path=\"/lessons/:name/\" component={LessonShow} />\r\n                <Route path=\"/lessons/\" component={LessonDirectory} />\r\n                <Route path=\"/\" component={Home} />\r\n              </Switch>\r\n            </>\r\n            :\r\n              <>\r\n                <Switch>\r\n                  <Route exact path=\"/\" component={Home} />\r\n                  <Route exact path=\"/SignUp\">\r\n                    <SignUp />\r\n                  </Route>\r\n                  <Route exact path=\"*/explanation\">\r\n                    <BaselineExplanation/>\r\n                  </Route>\r\n                  <Route exact path=\"/*\">\r\n                    <Login submitForm={this.submitForm} error={this.state.error}/>\r\n                  </Route>\r\n                </Switch>\r\n              </>\r\n          }\r\n        <Footer />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}